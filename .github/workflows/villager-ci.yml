# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build villager

on:
  push:
    branches: [ main ]
    paths:
      - 'villager/**'
    tags: 
      - '!*'
  pull_request:
    branches: [ main, charlescd-release-*.0 ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'villager/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('./villager/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build
      run: mvn -B clean install
      working-directory: ./villager
    - name: Tests coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./villager/target/site/jacoco/jacoco.xml
        flags: villager
        fail_ci_if_error: true
    - name: Code style
      run: mvn checkstyle:checkstyle
      working-directory: ./villager
    - name: Horusec Security
      working-directory: ./villager
      env: 
        HORUSEC_CLI_REPOSITORY_AUTHORIZATION: ${{ secrets.HORUSEC_CLI_REPOSITORY_AUTHORIZATION }}
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
        horusec start -p . -n="Charles/villager" -u="https://api-horusec.zup.com.br"

