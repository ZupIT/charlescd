name: build circle-matcher

on:
  push:
    branches: [ main ]
    paths:
      - 'circle-matcher/**'
    tags: 
      - '!*'
  pull_request:
    branches: [ main, charlescd-release-*.0 ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'circle-matcher/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Run actions checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@a766aa7b5fcc0a801fa3d4fd521ca299c03c9c00
        with:
          graalvm-version: '21.0.0.java11'
      - name: Run actions cache
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('./circle-matcher/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn -B clean install -Djfr.unsupported.vm=true
        working-directory: ./circle-matcher
      - name: Tests coverage
        uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192
        with:
          file: ./circle-matcher/target/site/jacoco/jacoco.xml
          flags: circlematcher
          fail_ci_if_error: true
      - name: Check Code Style
        run: mvn checkstyle:checkstyle
        working-directory: ./circle-matcher
      - name: Horusec Security
        working-directory: ./circle-matcher
        env: 
          HORUSEC_CLI_REPOSITORY_AUTHORIZATION: ${{ secrets.HORUSEC_CLI_REPOSITORY_AUTHORIZATION }}
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
          horusec start -p . -n="Charles/circle-matcher" -u="https://api-horusec.zup.com.br"
