name: butler dev-release

on:
  push:
    branches: [ release-darwin-* ]

jobs:
  build_and_push_prerelease:
    runs-on: ubuntu-latest
    steps:
    - name: Actions checkout
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
    - name: Actions cache
      uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Use Node.js 12.x
      uses: actions/setup-node@f1f314fca9dfce2769ece7d933488f076716723e
      with:
        node-version: 12.x

    - run: npm ci
      working-directory: ./butler
      
    - run: npm run build --if-present
      working-directory: ./butler
      env:
        CI: true

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@0d9a5be0dceea74e09396820e1e522ba4a110d2f
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 1200
        role-session-name: MyECRSession
        role-skip-session-tagging: true

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: charlescd-butler
        IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
      run: |
        cd butler
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
