# encoding: utf-8
consoleTitle=Keycloak 管理コンソール

# Common messages
enabled=有効
hidden=非表示
link-only-column=リンクのみ
name=名前
displayName=表示名
displayNameHtml=HTML 表示名
save=保存
cancel=キャンセル
next=次へ
onText=オン
offText=オフ
client=クライアント
clients=クライアント
clear=クリア
selectOne=1つ選択...

true=はい
false=いいえ

endpoints=エンドポイント

# Realm settings
realm-detail.enabled.tooltip=有効の場合は、ユーザーとクライアントはこのレルムのみアクセス可能になります
realm-detail.protocol-endpoints.tooltip=プロトコルエンドポイントの設定を表示します。
realm-detail.protocol-endpoints.oidc=OpenIDエンドポイントの設定
realm-detail.protocol-endpoints.saml=SAML 2.0アイデンティティー・プロバイダー・メタデータ
realm-detail.userManagedAccess.tooltip=有効にすると、ユーザーはアカウント管理コンソールを使用してリソースとパーミッションを管理できます。
userManagedAccess=User-Managed Access
registrationAllowed=ユーザー登録
registrationAllowed.tooltip=登録ページの有効/無効。ログインページに登録のリンクも表示されるようになります。
registrationEmailAsUsername=Eメールをユーザー名とする
registrationEmailAsUsername.tooltip=有効の場合は、登録フォームにおいてユーザー名フィールドが非表示となり、Eメールが新規ユーザーのユーザー名として使われます。
editUsernameAllowed=ユーザー名の編集
editUsernameAllowed.tooltip=有効の場合はユーザー名フィールドが編集可能になり、そうでない場合は読み取り専用になります。
resetPasswordAllowed=パスワード忘れ
resetPasswordAllowed.tooltip=パスワードを忘れてしまった場合にクリックするリンクを、ログインページに表示します。
rememberMe=ログイン状態の保存
rememberMe.tooltip=セッションの有効期限が切れるまではブラウザーの再起動でもログイン状態を保存するチェックボックスをログインページに表示します。
loginWithEmailAllowed=Eメールでログイン
loginWithEmailAllowed.tooltip=ユーザーがEメールアドレスでログインできるようにします。
duplicateEmailsAllowed=メールの重複
duplicateEmailsAllowed.tooltip=複数のユーザーが同じEメールアドレスを持つことを許可します。この設定を変更すると、ユーザーのキャッシュもクリアされます。重複するEメールアドレスのサポートを無効にした後で、データベース内の既存ユーザーのEメールの制約を手動で更新することをお勧めします。
verifyEmail=Eメールの確認
verifyEmail.tooltip=初回ログイン後またはアドレスの変更が送信された後に、ユーザーに自分の電子メールアドレスを確認するように要求します。
sslRequired=SSL の要求
sslRequired.option.all=全てのリクエスト
sslRequired.option.external=外部リクエスト
sslRequired.option.none=なし
sslRequired.tooltip=HTTPS は必須ですか? 「なし」 は HTTPS がどのクライアント IP アドレスにも要求されないことを意味します。 「外部リクエスト」 はローカルホストとプライベート IP アドレスは HTTPS なしでアクセスできることを意味します。 「すべてのリクエスト」 は HTTPS がすべての IP アドレスに要求されることを意味します。
publicKeys=公開鍵
publicKey=公開鍵
privateKey=秘密鍵
gen-new-keys=新しい鍵を生成する
certificate=証明書
host=ホスト
smtp-host=SMTP ホスト
port=ポート
smtp-port=SMTP ポート (デフォルトは25)
from=差出人
fromDisplayName=差出人の表示名
fromDisplayName.tooltip=差出人のアドレスのユーザーフレンドリーな名前です（オプション）。
replyTo=返信先
replyToDisplayName=返信先の表示名
replyToDisplayName.tooltip=返信先のアドレスのユーザーフレンドリーな名前です（オプション）。
envelopeFrom=Envelope From
envelopeFrom.tooltip=バウンスに使用されるEメールアドレス（オプション）。
sender-email-addr=送信者のメールアドレス
sender-email-addr-display=送信者Eメールアドレスの表示名
reply-to-email-addr=返信先のメールアドレス
reply-to-email-addr-display=返信先メールアドレスの表示名
sender-envelope-email-addr=送信者の Envelope Eメールアドレス
enable-ssl=SSL の有効
enable-start-tls=StartTLS の有効
enable-auth=認証の有効
username=ユーザー名
login-username=ログインユーザー名
password=パスワード
login-password=ログインパスワード
login-theme=ログインテーマ
login-theme.tooltip=ログイン、OTP、グラント、登録、およびパスワード忘れに使用するページのテーマを選択します。
account-theme=アカウントテーマ
account-theme.tooltip=ユーザーアカウント管理画面のテーマを選択します。
admin-console-theme=管理コンソールテーマ
select-theme-admin-console=管理コンソールのテーマを選択します。
email-theme=Eメールテーマ
select-theme-email=サーバーから送信されるEメールのテーマを選択します。
i18n-enabled=国際化の有効
supported-locales=サポートされるロケール
supported-locales.placeholder=ロケールを入力し Enter キーを押してください
default-locale=デフォルトロケール
realm-cache-clear=レルムキャッシュ
realm-cache-clear.tooltip=レルムキャッシュからすべてのエントリをクリアする (すべてのレルムのエントリをクリアします)
user-cache-clear=ユーザーキャッシュ
user-cache-clear.tooltip=ユーザーキャッシュからすべてのエントリを削除します (すべてのレルムのエントリをクリアします)
keys-cache-clear=キーキャッシュ
keys-cache-clear.tooltip=外部公開鍵のキャッシュからすべてのエントリーを消去します。これらは、外部のクライアントまたはアイデンティティプロバイダーの鍵です（これにより、すべてのレルムのエントリーがクリアされます）。
default-signature-algorithm=デフォルトの署名アルゴリズム
default-signature-algorithm.tooltip=このレルムでトークンの署名に使用されるデフォルトのアルゴリズム
revoke-refresh-token=リフレッシュトークンの無効化
revoke-refresh-token.tooltip=有効にすると、リフレッシュトークンは「リフレッシュトークンの最大再利用回数」までしか使用できず、別のトークンが使用されると無効化されます。無効の場合、リフレッシュトークンは使用後に無効化されず、複数回使用できます。
refresh-token-max-reuse=リフレッシュトークンの最大再利用回数
refresh-token-max-reuse.tooltip=リフレッシュトークンを再利用できる最大回数。別のトークンが使用された場合、即時に無効化されます。
sso-session-idle=SSO セッションアイドル
seconds=秒
minutes=分
hours=時
days=日
sso-session-max=SSO セッション最大
sso-session-idle.tooltip=セッションの有効期限が切れるまでのアイドル時間です。セッションが有効期限切れの際はトークンとブラウザーセッションは無効化されます。
sso-session-max.tooltip=セッションの有効期限が切れるまでの最大時間です。セッションが有効期限切れの際はトークンとブラウザーセッションは無効化されます。
sso-session-idle-remember-me=SSOセッション・アイドル・リメンバー・ミー
sso-session-idle-remember-me.tooltip=リメンバー・ミー・セッションの有効期限が切れるまでのアイドル時間です。セッションが期限切れになると、トークンおよびブラウザー・セッションは無効になります。設定されていない場合は、標準のSSOセッション・アイドル値が使用されます。
sso-session-max-remember-me=SSOセッション最大リメンバー・ミー
sso-session-max-remember-me.tooltip=ユーザーがリメンバー・ミー・オプションを設定したときにセッションが期限切れになるまでの最大時間。セッションが期限切れになると、トークンおよびブラウザー・セッションは無効になります。設定されていない場合は、標準のSSO Session Max値が使用されます。
offline-session-idle=オフラインセッションアイドル
offline-session-idle.tooltip=セッションの有効期限が切れるまでのオフライン時間です。この期限内に少なくとも1回はオフライントークンを使用してリフレッシュしないと、オフラインセッションは有効期限切れとなります。
realm-detail.hostname=ホスト名
realm-detail.hostname.tooltip=レルムに対してホスト名を設定します。特定のレルムのサーバーホスト名を上書きするために、固定ホスト名プロバイダーと組み合わせて使用​​します。

## KEYCLOAK-7688 Offline Session Max for Offline Token
offline-session-max-limited=オフラインセッション最大制限
offline-session-max-limited.tooltip=オフラインセッションの最大時間制限を有効にします。
offline-session-max=オフラインセッション最大
offline-session-max.tooltip=アクティビティに関係なく、オフラインセッションが期限切れになるまでの最大時間。

access-token-lifespan=アクセストークン生存期間
access-token-lifespan.tooltip=アクセストークンが有効期限切れとなる最大時間です。この値は SSO タイムアウトと比べて短くすることをお勧めします。
access-token-lifespan-for-implicit-flow=Implicit Flow におけるアクセストークン生存期間
access-token-lifespan-for-implicit-flow.tooltip=OpenID Connect Implicit Flow で発行されたアクセストークンが有効期限切れとなる最大時間です。この値は SSO タイムアウトより短くすることをお勧めします。 Implicit Flow ではトークンを更新することはありませんので、 「アクセストークン生存期間」 とは異なる別々のタイムアウト設定を設けています。
action-token-generated-by-admin-lifespan=デフォルトの管理者起動アクションの有効期間
action-token-generated-by-admin-lifespan.tooltip=管理者によってユーザーに送信されたアクション許可の有効期限が切れるまでの最大時間。この値は、管理者が現在オフラインになっているユーザーに対してEメールを送信できるように、長くすることをお勧めします。デフォルトのタイムアウトは、トークンを発行する直前にオーバーライドすることができます。
action-token-generated-by-user-lifespan=ユーザー起動アクションの有効期間
action-token-generated-by-user-lifespan.tooltip=ユーザーが送信したアクション許可（パスワード忘れのEメールなど）の有効期限が切れるまでの最大時間。ユーザーが自分で作成した操作にすばやく反応することが期待されるため、この値は短くすることをお勧めします。

action-token-generated-by-user.execute-actions=アクションの実行
action-token-generated-by-user.idp-verify-account-via-email=IdPアカウントのEメール検証
action-token-generated-by-user.reset-credentials=パスワード忘れ
action-token-generated-by-user.verify-email=Eメールでの確認
action-token-generated-by-user.tooltip=ユーザーが送信したアクション許可（パスワード忘れなど）が特定の操作で期限切れになるまでの、最大時間のデフォルト設定をオーバーライドします。ユーザーが自分で作成した操作にすばやく反応することが期待されるため、この値は短くすることをお勧めします。
action-token-generated-by-user.reset=リセット
action-token-generated-by-user.operation=ユーザーが開始したアクションの有効期限をオーバーライドします

client-login-timeout=クライアントのログインタイムアウト
client-login-timeout.tooltip=クライアントがアクセストークンプロトコルを終了するまでの最大時間。これは通常1分です。
login-timeout=ログインタイムアウト
login-timeout.tooltip=ユーザーがログインを完了するまでの最大時間です。これは30分以上と比較的長くすることをお勧めします。
login-action-timeout=ログインアクションタイムアウト
login-action-timeout.tooltip=ユーザーがパスワードの更新や OTP の設定のようなログインに関係するアクションを完了するまでの最大時間です。これは5分以上と比較的長くすることをお勧めします。
headers=ヘッダー
brute-force-detection=ブルートフォースの検出
x-frame-options=X-Frame-Options
x-frame-options-tooltip=デフォルト値では別のオリジンの IFrame からの読み込みを防ぎます (詳細はラベルをクリックしてください)
content-sec-policy=Content-Security-Policy
content-sec-policy-tooltip=デフォルト値では別のオリジンの IFrame からの読み込みを防ぎます (詳細はラベルをクリックしてください)
content-sec-policy-report-only=Content-Security-Policy-Report-Only
content-sec-policy-report-only-tooltip=コンテンツセキュリティポリシーのテスト用
content-type-options=X-Content-Type-Options
content-type-options-tooltip=デフォルト値では Internet Explorer と Google Chrome に対して、宣言された content-type を避けてレスポンスの MIME-sniffing を行うことを防ぎます (詳細はラベルをクリックしてください) 
robots-tag=X-Robots-Tag
robots-tag-tooltip=検索エンジンにページが表示されないようにする（詳細については、ラベルをクリックしてください）。
x-xss-protection=X-XSS-Protection
x-xss-protection-tooltip=このヘッダーは、ブラウザーにクロスサイトスクリプティング（XSS）フィルターを設定します。デフォルトの動作を使用すると、ブラウザーはXSS攻撃が検出されたときにページのレンダリングを防止します（詳細については、ラベルをクリックしてください）
strict-transport-security=HTTP Strict Transport Security (HSTS)
strict-transport-security-tooltip=Strict-Transport-Security HTTPヘッダーは、常にHTTPSを使用するようにブラウザーに指示します。ブラウザーはこのヘッダーを確認すると、max-ageで指定された期間（1年間）、HTTPS経由でのみサイトにアクセスします（サブドメインを含む）。
permanent-lockout=永久ロックアウト
permanent-lockout.tooltip=最大ログイン失敗回数を超えたときに、ユーザーを永久にロックします。
max-login-failures=最大ログイン失敗回数
max-login-failures.tooltip=検出するまでの失敗回数です。
wait-increment=連続失敗時の待機時間
wait-increment.tooltip=失敗回数が閾値に達した場合、どれくらいの時間ユーザーはロックアウトされるか設定します。
quick-login-check-millis=クイックログイン試行間のミリ秒数チェック
quick-login-check-millis.tooltip=クイックログイン失敗があまりにも頻繁に発生した場合は、ユーザーをロックアウトします。
min-quick-login-wait=クイックログイン失敗時の最小待機時間
min-quick-login-wait.tooltip=クイックログイン失敗後にどれくらいの時間待機するか設定します。
max-wait=最大待機時間
max-wait.tooltip=ユーザーがロックアウトされる最大待機時間を設定します。
failure-reset-time=ログイン失敗回数のリセット時間
failure-reset-time.tooltip=いつ失敗回数がリセットされるか設定します。
realm-tab-login=ログイン
realm-tab-keys=鍵
realm-tab-email=Eメール
realm-tab-themes=テーマ
realm-tab-cache=キャッシュ
realm-tab-tokens=トークン
realm-tab-client-registration=クライアント登録
realm-tab-security-defenses=セキュリティ防御
realm-tab-general=一般
add-realm=レルムの追加

#Session settings
realm-sessions=レルムセッション
revocation=取り消し
logout-all=すべてログアウトする
active-sessions=有効なセッション
offline-sessions=オフラインセッション
sessions=セッション
not-before=この日時より前
not-before.tooltip=この日時より前に発行されたトークンを取り消します。
set-to-now=現在日時を設定
push=プッシュ
push.tooltip=管理URLを持つすべてのクライアントに対して、新しい取り消しポリシーを通知します。

#Protocol Mapper
usermodel.prop.label=プロパティ
usermodel.prop.tooltip=UserModel インタフェースのプロパティメソッドの名前です。例えば、 「email」 の値は UserModel.getEmail() メソッドを参照しています。
usermodel.attr.label=ユーザー属性
usermodel.attr.tooltip=格納されるユーザー属性名、UserMode.attribute マップ内の属性名です。
userSession.modelNote.label=ユーザーセッションノート
userSession.modelNote.tooltip=UserSessionModel.note マップ内のユーザーセッションノート名です。
multivalued.label=マルチバリュー
multivalued.tooltip=属性がマルチバリューをサポートしているかどうかを示します。サポートしている場合は、この属性のすべての値リストがクレームとして設定されます。サポートしていない場合は、最初の値だけがクレームとして設定されます。
aggregate.attrs.label=属性値の集約
aggregate.attrs.tooltip=属性値をグループ属性と集約する必要があるかどうかを示します。OpenID Connectマッパーを使用している場合は、すべての値を取得するためにマルチバリューのオプションも有効にする必要があります。重複した値は破棄され、値の順序はこのオプションでは保証されません。
selectRole.label=ロールの選択
selectRole.tooltip=左側にあるテキストボックスにロールを入力するか、ブラウズして必要なロールを選択するためにこのボタンをクリックしてください。
tokenClaimName.label=トークンクレーム名
tokenClaimName.tooltip=トークン内に挿入するクレームの名前を設定します。 「address.street」 のように完全修飾名で設定します。この場合、ネストされた JSON オブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。
jsonType.label=クレーム JSON タイプ
jsonType.tooltip=トークンへの JSON クレーム の追加で使用される JSON タイプを設定します。 long、int、boolean、String、JSON が有効な値です。
includeInIdToken.label=ID トークンに追加
includeInIdToken.tooltip=クレームを ID トークンに追加すべきかどうかを設定します。
includeInAccessToken.label=アクセストークンに追加
includeInAccessToken.tooltip=クレームをアクセストークンに追加すべきかどうかを設定します。
includeInUserInfo.label=UserInfo に追加
includeInUserInfo.tooltip=クレームを UserInfo に追加すべきかどうかを設定します。
usermodel.clientRoleMapping.clientId.label=クライアント ID
usermodel.clientRoleMapping.clientId.tooltip=ロールマッピング用のクライアント ID。このクライアントのクライアント・ロールだけがトークンに追加されます。これが設定されていない場合は、すべてのクライアントのクライアント・ロールがトークンに追加されます。
usermodel.clientRoleMapping.rolePrefix.label=クライアントロールのプレフィックス
usermodel.clientRoleMapping.rolePrefix.tooltip=各クライアントロールのプレフィックスを設定します (オプション)。
usermodel.clientRoleMapping.tokenClaimName.tooltip=トークン内に挿入するクレームの名前を設定します。 「address.street」 のように完全修飾名で設定します。この場合、ネストされた JSON オブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。特別なトークン${client_id}を使うことができ、これは実際のクライアントIDに置き換えられます。使用例は「resource_access.${client_id}.roles」です。これは、すべてのクライアントからロールを追加する場合（特に「Client ID」スイッチが設定されていない場合）や、各クライアントのクライアントロールを別々の場所に配置する場合に、特に便利です。
usermodel.realmRoleMapping.rolePrefix.label=レルムロールのプレフィックス
usermodel.realmRoleMapping.rolePrefix.tooltip=各レルムロールのプレフィックスを設定します (オプション)。
sectorIdentifierUri.label=Sector Identifier URI
sectorIdentifierUri.tooltip=pairwise sub 値を使用し、かつ Dynamic Client Registration をサポートするプロバイダーは、sector_identifier_uri パラメータを使用すべきです (SHOULD)。これは、共通の管理下にある Web サイト群に対し、個々のドメイン名とは独立して parwise sub 値の一貫性を保持する方法を提供します。また、クライアントに対し、すべてのユーザーを再登録させることなしに redirect_uri を変更する方法も提供します。
pairwiseSubAlgorithmSalt.label=ソルト
pairwiseSubAlgorithmSalt.tooltip=pairwise subject identifier を計算する際に使用するソルトを設定します。空白のままにするとソルトは生成されます。
addressClaim.street.label=その他住所のユーザー属性名
addressClaim.street.tooltip=「address」トークンクレーム内の「street_address」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「street」です。
addressClaim.locality.label=市区町村のユーザー属性名
addressClaim.locality.tooltip=「address」トークンクレーム内の「locality」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「locality」です。
addressClaim.region.label=都道府県のユーザー属性名
addressClaim.region.tooltip=「address」トークンクレーム内の「region」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「region」です。
addressClaim.postal_code.label=郵便番号のユーザー属性名
addressClaim.postal_code.tooltip=「address」トークンクレーム内の「postal_code」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「postal_code」です。
addressClaim.country.label=国のユーザー属性名
addressClaim.country.tooltip=「address」トークンクレーム内の「country」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「country」です。
addressClaim.formatted.label=整形された住所のユーザー属性名
addressClaim.formatted.tooltip=「address」トークンクレーム内の「formatted」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「formatted」です。
included.client.audience.label=含まれるクライアント・オーディエンス
included.client.audience.tooltip=指定されたオーディエンス・クライアントのクライアントIDが、トークンのオーディエンス（aud）フィールドに含まれます。トークンに既存のオーディエンスが存在する場合は、指定された値が単にそれらに追加されます。既存のオーディエンスを上書きすることはありません。
included.custom.audience.label=含まれるカスタム・オーディエンス
included.custom.audience.tooltip=これは「含まれるクライアント・オーディエンス」が入力されていない場合にのみ使用されます。指定された値が、トークンのオーディエンス（aud）フィールドに含まれます。トークンに既存のオーディエンスが存在する場合は、指定された値が単にそれらに追加されます。既存のオーディエンスを上書きすることはありません。

# client details
clients.tooltip=クライアントとはレルム内の信頼されたブラウザーアプリケーションや Web サービスです。これらのクライアントはログインを要求することができます。また、クライアント固有のロールを定義することができます。
search.placeholder=検索...
create=作成
import=インポート
client-id=クライアント ID
base-url=ベース URL
actions=アクション
not-defined=未定義
edit=編集
delete=削除
no-results=結果がありません
no-clients-available=使用可能なクライアントはありません
add-client=クライアントの追加
select-file=ファイルを選択
view-details=詳細を参照
clear-import=インポートをクリア
client-id.tooltip=URI とトークンで参照される ID を指定します。例えば 「my-client」 です。 SAML においては 期待される AuthnRequest の Issuer の値になります。
client.name.tooltip=クライアントの表示名を指定します。例えば、 「My Client」 です。ローカライズ用のキーもサポートしています。例\: ${my_client}
client.enabled.tooltip=無効なクライアントはログインを開始したり、アクセストークンを取得したりすることはできません。
consent-required=同意が必要
consent-required.tooltip=有効の場合は、ユーザーはクライアントアクセスに同意する必要があります。
client.display-on-consent-screen=同意画面でクライアントを表示
client.display-on-consent-screen.tooltip=同意する必要がある場合にのみ適用されます。このスイッチがオフの場合、同意画面には設定されたクライアントスコープに対応する同意のみが表示されます。オンの場合、同意画面にこのクライアント自体に関する項目も1つ表示されます。
client.consent-screen-text=クライアントの同意画面のテキスト
client.consent-screen-text.tooltip=このクライアントに対して、「同意画面でクライアントを表示」がオンの場合にのみ適用されます。このクライアントに対する特定のアクセス許可について、同意画面に表示するテキストを設定します。
client-protocol=クライアントプロトコル
client-protocol.tooltip=「OpenID Connect」 は、認可サーバーによって実行される認証を元にして、エンドユーザーのアイデンティティを確認するクライアントです。 「SAML」 は、クロスドメインのシングルサインオン (SSO) を含むWeb ベースの認証と認可シナリオを可能にし、情報を渡すためにアサーションを含むセキュリティトークンを使用します。
access-type=アクセスタイプ
access-type.tooltip=「Confidential」 クライアントはログインプロトコルの開始するためにシークレットを必要とします。 「Public」 クライアントはシークレットを必要としません。 「Bearer-only」 クライアントはログインを開始することはない Web サービスです。
standard-flow-enabled=Standard Flow の有効
standard-flow-enabled.tooltip=OpenID Connect の標準的な、認可コードによるリダイレクトベースの認証を有効にします。 OpenID Connect または OAuth2 の仕様における 「Authorization Code Flow」 のサポートを有効にします。
implicit-flow-enabled=Implicit Flow の有効
implicit-flow-enabled.tooltip=OpenID Connect の認可コードなしのリダイレクトベース認証のサポートを有効にします。OpenID Connect または OAuth2 の仕様における 「Implicit Flow」 のサポートを有効にします。
direct-access-grants-enabled=ダイレクトアクセスグラントの有効
direct-access-grants-enabled.tooltip=ダイレクトアクセスグラントのサポートを有効にします。これは、アクセストークンの取得のために Keycloak サーバーとユーザーのユーザー名/パスワードで直接アクセスを行います。OAuth2 の仕様における 「リソースオーナーパスワードクレデンシャルグラント」 のサポートを有効にします。
service-accounts-enabled=サービスアカウントの有効
service-accounts-enabled.tooltip=Keycloak にこのクライアントを認証し、このクライアント専用のアクセストークンの取得ができるようになります。OAuth2 の仕様における 「クライアントクレデンシャルグラント」 のサポートを有効にします。
include-authnstatement=AuthnStatement を含める
include-authnstatement.tooltip=認証方式とタイムスタンプを含めたステートメントをログインレスポンスに含めるべきか設定します。
include-onetimeuse-condition=OneTimeUse 条件を含める
include-onetimeuse-condition.tooltip=OneTimeUse 条件をログインレスポンスに含めるべきか設定します。 
sign-documents=ドキュメントを署名する
sign-documents.tooltip=SAML ドキュメントをレルムで署名すべきか設定します。
sign-documents-redirect-enable-key-info-ext=REDIRECT 署名鍵検索の最適化
sign-documents-redirect-enable-key-info-ext.tooltip=Keycloak アダプターによって保護された SP の REDIRECT Binding で SAML ドキュメントに署名する際、署名キーの ID を <Extensions> 要素の SAML プロトコルメッセージに含める必要がありますか? これにより、検証のために既知のすべてのキーを試行する代わりに単一のキーを使用するため、署名の検証が最適化されます。
sign-assertions=アサーションを署名する
sign-assertions.tooltip=SAML ドキュメント内のアサーションを署名すべきか設定します。もしドキュメントが既に署名済みの場合は、この設定は不要です。
signature-algorithm=署名アルゴリズム
signature-algorithm.tooltip=ドキュメントの署名に使用する署名アルゴリズムです。
canonicalization-method=正規化方式
canonicalization-method.tooltip=XML署名の正規化方式 (Canonicalization Method) を設定します。
encrypt-assertions=アサーションを暗号化する
encrypt-assertions.tooltip=SAML アサーションをクライアントの公開鍵で AES を使い暗号化すべきか設定します。
client-signature-required=クライアント署名が必須
client-signature-required.tooltip=クライアントは SAML リクエストとレスポンスを署名しますか? それらを検証すべきか設定します。
force-post-binding=POST Binding を強制
force-post-binding.tooltip=レスポンスに常に POST Binding を使用します。
front-channel-logout=フロントチャンネルログアウト
front-channel-logout.tooltip=有効の場合は、ログアウトはクライアントへのブラウザーリダイレクトが必要になります。無効の場合は、サーバーはログアウトのバックグラウンド呼び出しを行います。
force-name-id-format=Name ID フォーマットを強制
force-name-id-format.tooltip=要求された NameID サブジェクトフォーマットを無視し、管理コンソールで設定された物を使用します。
name-id-format=Name ID フォーマット
name-id-format.tooltip=サブジェクトに使用する Name ID フォーマットを設定します。
root-url=ルート URL
root-url.tooltip=相対 URL に追加するルート URL を設定します。
valid-redirect-uris=有効なリダイレクト URI
valid-redirect-uris.tooltip=ログインまたはログインの成功後にブラウザーがリダイレクト可能とする、有効な URI パターンを設定します。単純なワイルドカード、つまり 「http://example.com/*」 が使用可能です。相対パス、つまり 「/my/relative/path/*」 も指定可能です。相対パスはクライアントのルート URL を基準とします。または、未指定の場合は認証サーバーのルート URL が使用されます。SAML では、ログインリクエストに埋め込まれたコンシューマサービスの URL に依存している場合は、有効な URI パターンを設定する必要があります。
base-url.tooltip=認証サーバーがクライアントへのリダイレクトまたは戻るリンクを必要とする際に使用するデフォルト URL を設定します。
admin-url=管理 URL
admin-url.tooltip=クライアントの管理インタフェースの URL を設定します。クライアントがアダプターの REST API をサポートしている場合に設定してください。この REST API により、認証サーバーは取り消しポリシーや他の管理タスクをプッシュすることができます。通常、クライアントのベース URL を設定します。
master-saml-processing-url=SAML を処理するマスター URL
master-saml-processing-url.tooltip=設定された場合は、この URL が SP のアサーションコンシューマおよびシングルログアウトサービスの両方の Binding に使われます。これは、SAML エンドポイントの詳細設定にある各 Binding やサービスの設定にて個別に上書きすることができます。
idp-sso-url-ref=IDP Initiated SSO の URL Name
idp-sso-url-ref.tooltip=IDP Initiated SSO を行う際にクライアントを参照するための URL フラグメント名を設定します。空にすると IDP Initiated SSO は無効になります。ブラウザーから参照する URL は 「{server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}」 になります。
idp-sso-url-ref.urlhint=対象の IDP initiated SSO の URL:
idp-sso-relay-state=IDP Initiated SSO の RelayState
idp-sso-relay-state.tooltip=IDP Initiated SSO を行う際の SAML リクエストで送信したい RelayState を設定します。
web-origins=Web オリジン
web-origins.tooltip=許可される CORS オリジンを設定します。有効なリダイレクト URI のすべてのオリジンを許可するには 「+」 を追加してください。すべてのオリジンを許可するには 「*」 を追加してください。
fine-oidc-endpoint-conf=OpenID Connect の詳細設定
fine-oidc-endpoint-conf.tooltip=このセクションを展開して、OpenID Connect プロトコルに関連するこのクライアントの高度な設定を行います。
access-token-signed-response-alg=アクセストークン署名アルゴリズム
access-token-signed-response-alg.tooltip=アクセストークンの署名に使用されるJWAアルゴリズム。
id-token-signed-response-alg=IDトークン署名アルゴリズム
id-token-signed-response-alg.tooltip=IDトークンの署名に使用されるJWAアルゴリズム。
id-token-encrypted-response-alg=IDトークン暗号化鍵管理アルゴリズム
id-token-encrypted-response-alg.tooltip=IDトークンの暗号化鍵の管理に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合にのみ必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。
id-token-encrypted-response-enc=IDトークン暗号化コンテンツの暗号化アルゴリズム
id-token-encrypted-response-enc.tooltip=id-token-encrypted-response-enc.tooltip=IDトークンの暗号化の際に、コンテンツの暗号化に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合にのみ必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。
user-info-signed-response-alg=署名付き User Info レスポンスのアルゴリズム
user-info-signed-response-alg.tooltip=署名付き User Info エンドポイントのレスポンスに使用する JWA アルゴリズムを設定します。「unsigned」 に設定した場合は、User Info レスポンスは署名されず、application/json 形式で返されます。
request-object-signature-alg=リクエストオブジェクトの署名アルゴリズム
request-object-signature-alg.tooltip=クライアントが 「request」 または 「request_uri」 パラメータで指定された OIDC リクエストオブジェクトを送信する際に使用する必要がある、JWA アルゴリズムを設定します。「any」 に設定した場合は、リクエストオブジェクトは任意のアルゴリズム (「none」 を含む) で署名されます。
request-object-required=リクエストオブジェクトが必要
request-object-required.tooltip=クライアントが認可リクエストとともにリクエストオブジェクトを提供する必要があるかどうか、およびそのためにどの方法を使用できるかを指定します。「not required」に設定されている場合、リクエストオブジェクトの提供はオプションです。それ以外のケースでは、リクエストオブジェクトを提供する必要があります。「request」に設定されている場合、リクエストオブジェクトは値で提供される必要があります。「request_uri」に設定されている場合、リクエストオブジェクトは参照によって提供される必要があります。「requestまたはrequest_uri」に設定されている場合、いずれの方法も使用できます。
fine-saml-endpoint-conf=SAML エンドポイントの詳細設定
fine-saml-endpoint-conf.tooltip=アサーションコンシューマおよびシングルログアウトサービスの正確な URL を設定するにはこのセクションを開きます。
assertion-consumer-post-binding-url=アサーションコンシューマサービスの POST Binding URL
assertion-consumer-post-binding-url.tooltip=アサーションコンシューマサービス (ログインレスポンス) の SAML POST Binding URL を設定します。この Binding のための URL がない場合は空でよいです。
assertion-consumer-redirect-binding-url=アサーションコンシューマサービスの Redirect Binding URL
assertion-consumer-redirect-binding-url.tooltip=アサーションコンシューマサービス (ログインレスポンス) の SAML Redirect Binding URL を設定します。この Binding のための URL がない場合は空でよいです。
logout-service-post-binding-url=ログアウトサービスの POST Binding URL
logout-service-post-binding-url.tooltip=シングルログアウトサービスの SAML POST Binding URLを設定します。異なる Binding を使用している場合は空でよいです。
logout-service-redir-binding-url=ログアウトサービスの Redirect Binding URL
logout-service-redir-binding-url.tooltip=シングルログアウトサービスの SAML Redirect Binding URLを設定します。異なる Binding を使用している場合は空でよいです。
saml-signature-keyName-transformer= SAML署名鍵名
saml-signature-keyName-transformer.tooltip=署名されたSAML文書には、KeyName要素の署名鍵の識別情報が含まれています。Keycloak / RH-SSOカウンターパーティーの場合は、KEY_IDを使用し、MS AD FSの場合はCERT_SUBJECTを使用します。他のオプションが動作しない場合はNONEをチェックして使用します。
oidc-compatibility-modes= OpenID Connect互換モード
oidc-compatibility-modes.tooltip=このセクションを展開して、古いOpenID Connect / OAuth2アダプターとの下位互換性の設定を行います。これは、クライアントが古いバージョンのKeycloak / RH-SSOアダプターを使用している場合に特に便利です。
exclude-session-state-from-auth-response=認証レスポンスからセッション状態を除外
exclude-session-state-from-auth-response.tooltip=これがオンの場合、パラメーター「session_state」はOpenID Connect認証レスポンスに含まれません。クライアントが「session_state」パラメーターをサポートしていない古いOIDC / OAuth2アダプターを使用している場合に便利です。

# client import
import-client=クライアントのインポート
format-option=フォーマットオプション
select-format=フォーマットを選択
import-file=ファイルをインポート

# client tabs
settings=設定
credentials=クレデンシャル
saml-keys=SAML 鍵
roles=ロール
mappers=マッパー
mappers.tooltip=プロトコルマッパーはトークンやドキュメントの変換を行います。ユーザーデータをプロトコルのクレームにマッピングしたり、クライアントと認証サーバー間の任意のリクエストを単に変換したりすることができます。
scope=スコープ
scope.tooltip=スコープマッピングはクライアントに要求されたアクセストークン内に含まれるユーザーのロールマッピングを制限することができます。
sessions.tooltip=このクライアントの有効なセッションを参照します。どのユーザーがアクティブでいつログインしたかを見ることができます。
offline-access=オフラインアクセス
offline-access.tooltip=このクライアントのオフラインセッションを参照します。オフライントークンをどのユーザーがいつ取得したかを見ることができます。このクライアントのすべてのトークンを取り消すには、取り消しタブを開き、 「この日時より前」 に現在日時を設定してください。
clustering=クラスタリング
installation=インストール
installation.tooltip=様々なクライアントアダプターの設定フォーマットを生成するヘルパーユーティリティです。生成したものをダウンロードまたはカットアンドペーストしてクライアントに設定することができます。
service-account-roles=サービスアカウントロール
service-account-roles.tooltip=このクライアント専用のサービスアカウントのロールマッピングを認証できるようにします。

# client credentials
client-authenticator=クライアント認証
client-authenticator.tooltip=Keycloak サーバーに対してこのクライアントの認証に使用するクライアント認証方式を設定します。
certificate.tooltip=クライアントで発行され、キーストアの秘密鍵で署名された JWT を検証するためのクライアント証明書です。
publicKey.tooltip=クライアントで発行され、秘密鍵で署名された JWT を検証するための公開鍵です。
no-client-certificate-configured=クライアント証明書が設定されていません
gen-new-keys-and-cert=新しい鍵と証明書を生成
import-certificate=証明書をインポート
gen-client-private-key=クライアントの秘密鍵の生成
generate-private-key=秘密鍵の生成
kid=Kid
kid.tooltip=インポートされた JWKS のクライアントの公開鍵の KID (Key ID) を設定します。
use-jwks-url=JWKS URL の使用
use-jwks-url.tooltip=有効とした場合は、クライアントの公開鍵が指定の JWKS URL からダウンロードされます。 これにより、クライアントが新しい鍵ペアを生成した際に、新しい鍵が常に再ダウンロードされるため、柔軟性が向上します。無効とした場合は、Keycloak DB の公開鍵 (または証明書) が使用されるため、クライアントの鍵ペアが変更された際には、常に新しい鍵 (または証明書) を Keycloak DB にもインポートする必要があります。
jwks-url=JWKS URL
jwks-url.tooltip=JWK 形式のクライアント鍵が格納されている URL を設定します。詳細は JWK の仕様を参照してください。「jwt」 クレデンシャルを持つ keycloak クライアントアダプターを使用している場合は、アプリケーションに「/k_jwks」という接尾辞を付けた URL を使用することができます。例えば、「http://www.myhost.com/myapp/k_jwks」 です。
archive-format=アーカイブ形式
archive-format.tooltip=Java キーストアまたは PKCS12 アーカイブ形式
key-alias=キーエイリアス
key-alias.tooltip=秘密鍵と証明書のアーカイブエイリアスです。
key-password=鍵のパスワード
key-password.tooltip=アーカイブ内の秘密鍵にアクセスするためのパスワード
store-password=ストアのパスワード
store-password.tooltip=アーカイブ自身にアクセスするためのパスワード
generate-and-download=生成 & ダウンロード
client-certificate-import=クライアント証明書のインポート
import-client-certificate=クライアント証明書のインポート
jwt-import.key-alias.tooltip=証明書のアーカイブエイリアスです。
secret=シークレット
regenerate-secret=シークレットの再生成
registrationAccessToken=登録用アクセストークン
registrationAccessToken.regenerate=登録用アクセストークンの再生成
registrationAccessToken.tooltip=登録用アクセストークンにより、クライアントはクライアント登録サービスにアクセスできます。
add-role=ロールの追加
role-name=ロール名
composite=複合
description=説明
no-client-roles-available=使用可能なクライアントロールはありません。
composite-roles=複合ロール
composite-roles.tooltip=このロールがユーザーにアサイン（アサイン解除）された際に、関連するロールが暗黙的にアサイン（アサイン解除）されます。
realm-roles=レルムロール
available-roles=使用可能なロール
add-selected=選択したものを追加
associated-roles=関連ロール
composite.associated-realm-roles.tooltip=この複合ロールに関連付けされているレルムレベルのロールです。
composite.available-realm-roles.tooltip=この複合ロールに関連付け可能なレルムレベルのロールです。
remove-selected=選択されたものを削除
client-roles=クライアントロール
select-client-to-view-roles=ロールを参照するにはクライアントを選択してください
available-roles.tooltip=この複合ロール関連付け可能なこのクライアントのロールです。
client.associated-roles.tooltip=この複合ロールに関連付けされているクライアントロールです。
add-builtin=ビルトインを追加
category=カテゴリ
type=タイプ
priority-order=優先順位
no-mappers-available=使用可能なマッパーはありません
add-builtin-protocol-mappers=ビルトインプロトコルマッパーを追加
add-builtin-protocol-mapper=ビルトインプロトコルマッパーを追加
scope-mappings=スコープマッピング
full-scope-allowed=フルスコープを許可
full-scope-allowed.tooltip=全ての制限の無効を許可します。
scope.available-roles.tooltip=スコープにアサイン可能なレルムレベルのロールです。
assigned-roles=アサイン済みロール
assigned-roles.tooltip=スコープにアサイン済みのレルムレベルのロールです。
effective-roles=有効なロール
realm.effective-roles.tooltip=複合ロールの継承も含めたアサイン済みのレルムレベルのロールです。
select-client-roles.tooltip=ロールを参照するにはクライアントを選択してください
assign.available-roles.tooltip=アサイン可能なクライアントロールです。
client.assigned-roles.tooltip=アサイン済みクライアントロールです。
client.effective-roles.tooltip=複合ロールより引き継いでいるロールも含めたアサイン済みのクライアントロールです。
basic-configuration=基本設定
node-reregistration-timeout=ノード再登録のタイムアウト
node-reregistration-timeout.tooltip=登録されたクライアントをクラスターノードへ再登録する際の最大時間間隔を設定します。クラスターノードがこの時間内に Keycloak に再登録リクエストを送信しない場合は、Keycloak から登録解除されます。
registered-cluster-nodes=登録済みクラスターノード
register-node-manually=ノードを手動で登録
test-cluster-availability=クラスターの可用性をテスト
last-registration=最終登録
node-host=ノードホスト
no-registered-cluster-nodes=使用可能な登録済みクラスターノードがありません
cluster-nodes=クラスターノード
add-node=ノードを追加
active-sessions.tooltip=このクライントの有効なユーザーセッションの合計数です。
show-sessions=セッションを表示
show-sessions.tooltip=有効なセッション数に応じて高負荷なオペレーションになる恐れがありますので注意してください。
user=ユーザー
from-ip=From IP
session-start=セッション開始
first-page=最初のページ
previous-page=前のページ
next-page=次のページ
client-revoke.not-before.tooltip=この日時より前に発行されたこのクライアント用のトークンを取り消します。
client-revoke.push.tooltip=管理 URL がこのクライアントに設定されている場合は、クライアントにポリシーをプッシュします。
select-a-format=フォーマットを選択
download=ダウンロード
offline-tokens=オフライントークン
offline-tokens.tooltip=このクライアントのオフライントークンの合計数です。
show-offline-tokens=オフライントークンを表示
show-offline-tokens.tooltip=オフライントークン数に応じて高負荷なオペレーションになる恐れがありますので注意してください。
token-issued=発行済みトークン
last-access=最終アクセス
last-refresh=最終リフレッシュ
key-export=鍵をエクスポート
key-import=鍵をインポート
export-saml-key=SAML 鍵をエクスポート
import-saml-key=SAML 鍵をインポート
realm-certificate-alias=レルム証明書エイリアス
realm-certificate-alias.tooltip=レルム証明書もアーカイブに格納されます。これはそのエイリアスとなります。
signing-key=署名鍵
saml-signing-key=SAML 署名鍵です。
private-key=秘密鍵
generate-new-keys=新しい鍵を生成
export=エクスポート
encryption-key=暗号化鍵
saml-encryption-key.tooltip=SAML 暗号化鍵です。
service-accounts=サービスアカウント
service-account.available-roles.tooltip=サービスアカウントにアサイン可能なレルムレベルのロールです。
service-account.assigned-roles.tooltip=サービスアカウントにアサイン済みのレルムレベルのロールです。
service-account-is-not-enabled-for={{client}} のサービスアカウントは有効ではありません
create-protocol-mappers=プロトコルマッパーを作成
create-protocol-mapper=プロトコルマッパーを作成
protocol=プロトコル
protocol.tooltip=プロトコルです。
id=ID
mapper.name.tooltip=マッパーの名前です。
mapper.consent-required.tooltip=一時的なアクセスを許可する際に、クライアントへの提供データにユーザーの同意を必要とするか設定します。
consent-text=同意のテキスト
consent-text.tooltip=同意ページに表示するテキストです。
mapper-type=マッパータイプ
mapper-type.tooltip=マッパーのタイプです。
# realm identity providers
identity-providers=アイデンティティ プロバイダー
table-of-identity-providers=アイデンティティ プロバイダーの一覧表
add-provider.placeholder=プロバイダーを追加...
provider=プロバイダー
gui-order=GUI 順序
first-broker-login-flow=初回ログインフロー
post-broker-login-flow=ログイン後のフロー
redirect-uri=リダイレクト URI
redirect-uri.tooltip=アイデンティティ プロバイダーの設定で使用するリダイレクト URIです。
alias=エイリアス
display-name=表示名
identity-provider.alias.tooltip=エイリアスは一意にアイデンティティ プロバイダーを識別するもので、リダイレクト URI の構築にも使用されます。
identity-provider.display-name.tooltip=アイデンティティ プロバイダーの分かりやすい名前を設定します。
identity-provider.enabled.tooltip=このアイデンティティ プロバイダーの有効/無効を設定します。
authenticate-by-default=デフォルトで認証
identity-provider.authenticate-by-default.tooltip=ログイン画面の表示前に、このプロバイダーでデフォルトで認証試行すべきかどうかを示しています。
store-tokens=トークンの格納
identity-provider.store-tokens.tooltip=ユーザー認証後のトークン格納の有効/無効を設定します。
stored-tokens-readable=読み取り可能なトークンを格納
identity-provider.stored-tokens-readable.tooltip=新しいユーザーが格納されたトークンを読み取り可能かどうかの有効/無効設定です。broker.read-token ロールをアサインします。
disableUserInfo=User Info の無効
identity-provider.disableUserInfo.tooltip=追加のユーザー情報を取得する User Info サービスの使用を無効にしますか? デフォルトではこの OIDC サービスを使用します。
userIp=userIp パラメータの使用
identity-provider.google-userIp.tooltip=Googleの User Info サービスの呼び出し時に「userIp」クエリパラメータを設定します。これはユーザーの IP アドレスを使用します。Google が User Info サービスへのアクセスを制限している場合に役立ちます。
offlineAccess=リフレッシュトークンを要求する
identity-provider.google-offlineAccess.tooltip=リフレッシュトークンを取得するには、Google認可エンドポイントにリダイレクトするときに「access_type」クエリー・パラメーターを「offline」に設定します。ユーザーがブラウザーを利用していないときに、Google APIにアクセスするためのGoogleトークンを取得するために、トークン交換の使用を計画している場合に便利です。
hostedDomain=ホストされたドメイン
identity-provider.google-hostedDomain.tooltip=Googleにログインするときに「hd」クエリー・パラメーターを設定します。Googleはこのドメインのアカウントのみを一覧表示します。Keycloakは、返されたIDトークンにこのドメインに対するクレームがあることを検証します。「*」を入力すると、任意のホストされたアカウントを使用できます。
sandbox=対象のサンドボックス
identity-provider.paypal-sandbox.tooltip=対象のPayPalサンドボックス環境
update-profile-on-first-login=初回ログイン時にプロフィールを更新
on=オン
on-missing-info=情報不足の場合
off=オフ
update-profile-on-first-login.tooltip=初回ログイン時にどのユーザーがプロフィールの更新を必要とするか条件を定義します。
trust-email=Eメールを信頼
trust-email.tooltip=有効とした場合は、このレルムでEメールの確認が有効となっている場合でも、このプロバイダーが提供するEメールは確認されなくなります。
link-only=アカウントのリンクのみ
link-only.tooltip=trueの場合、ユーザーはこのプロバイダーからログインできません。このプロバイダーにリンクすることのみできます。これは、プロバイダーからのログインを許可したくないが、プロバイダーと統合したい場合に便利です
hide-on-login-page=ログインページで非表示
hide-on-login-page.tooltip=非表示の場合、明示的にリクエストされていれば（例えば、'kc_idp_hint'パラメーターを使用していれば）、このプロバイダーによるログインが可能です。
gui-order.tooltip=GUI (例. ログインページ上) でのプロバイダーの表示順序を決める番号を設定します。
first-broker-login-flow.tooltip=このアイデンティティ プロバイダーでの初回ログイン後に起動させる認証フローのエイリアスです。 「初回ログイン」 という用語は、認証したアイデンティティ プロバイダーアカウントに関連付けられた Keycloak アカウントがまだ存在しない状態であることを意味します。
post-broker-login-flow.tooltip=このアイデンティティ プロバイダーでの各ログイン後に起動させる認証フローのエイリアスです。このアイデンティティ プロバイダーで認証された各ユーザーの追加の確認 (例えば OTP) を行いたい場合に便利です。このアイデンティティ プロバイダーによるログイン後に追加の Authenticator の起動を行いたくない場合は、空のままとしてください。また、Authenticator の実装では、ClientSession にはアイデンティティ プロバイダーによりユーザーが既に設定されていることに注意してください。
openid-connect-config=OpenID Connect の設定
openid-connect-config.tooltip=OIDC SP と 外部 IDP の設定です。
authorization-url=認可 URL
authorization-url.tooltip=認可 URL を設定します。
token-url=トークン URL
token-url.tooltip=トークン URL を設定します。
loginHint=login_hintを渡す
loginHint.tooltip=アイデンティティプロバイダーにlogin_hintを渡します。
uiLocales=現在のロケールを渡す
uiLocales.tooltip=現在のロケールをui_localesパラメーターとしてアイデンティティー・プロバイダーに渡します。
logout-url=ログアウト URL
identity-provider.logout-url.tooltip=外部 IDP からユーザーのログアウトに使用するセッション終了エンドポイントを設定します。
backchannel-logout=バックチャンネルログアウト
backchannel-logout.tooltip=外部 IDP がバックチャンネルログアウトをサポートするどうかを設定します。
user-info-url=UserInfo URL
user-info-url.tooltip=UserInfo の URL を設定します。これはオプションです。
identity-provider.client-id.tooltip=アイデンティティ プロバイダーで登録されているクライアントまたはクライアント識別子を設定します。
client-secret=クライアントシークレット
show-secret=シークレットを表示する
hide-secret=シークレットを隠す
client-secret.tooltip=アイデンティティ プロバイダーで登録されているクライアントまたはクライアントシークレットを設定します。
issuer=発行者 (Issuer)
issuer.tooltip=レスポンス内の発行者の識別子 (Issuer Identifier) を設定します。未設定の場合は、検証は実行されません。
default-scopes=デフォルトスコープ
identity-provider.default-scopes.tooltip=認可要求の際に送信されるスコープです。スペース区切りでスコープのリストを設定します。デフォルトは 「openid」 です。
prompt=プロンプト (prompt)
unspecified.option=未定義
none.option=none
consent.option=consent
login.option=login
select-account.option=select_account
prompt.tooltip=認証サーバーは再認証や同意をエンドユーザーに促すかどうかを指定します。
accepts-prompt-none-forward-from-client=クライアントから転送されるprompt=noneを受け入れる
accepts-prompt-none-forward-from-client.tooltip=これは、アイデンティティー・プロバイダー・オーセンティケーターとともに使用されるか、またはkc_idp_hintがこのアイデンティティー・プロバイダーを指す場合に使用されます。クライアントがprompt=noneでリクエストを送信し、ユーザーがまだ認証されていない場合、エラーは直接クライアントに返されませんが、prompt=noneのリクエストはこのアイデンティティー・プロバイダーに転送されます。
validate-signatures=署名検証
identity-provider.validate-signatures.tooltip=外部 IDP の署名検証の有効/無効を設定します。
identity-provider.use-jwks-url.tooltip=有効とした場合は、アイデンティティ プロバイダーの公開鍵が指定された JWKS URL からダウンロードされます。アイデンティティ プロバイダーが新しい鍵ペアを生成する際に、新しい鍵が常に再ダウンロードされるため、柔軟性が大幅に向上します。無効とした場合は、Keycloak DB の公開鍵 (または証明書) が使用されるため、アイデンティティ プロバイダーの鍵ペアが変更された際には、常に Keycloak DB に新しい鍵をインポートする必要があります。
identity-provider.jwks-url.tooltip=JWK 形式のアイデンティティ プロバイダーの鍵が格納されている URL を設定します。詳細は JWK の仕様を参照してください。外部の Keycloak アイデンティティ プロバイダーを使用する場合は、ブローカーの Keycloak が 「http://broker-keycloak:8180」 で実行されておりレルムが 「test」 と仮定すると、「http://broker-keycloak:8180/auth/realms/test/protocol/openid-connect/certs」 のような URL を使用することができます。
validating-public-key=検証用の公開鍵
identity-provider.validating-public-key.tooltip=外部 IDP の署名検証に使用する PEM 形式の公開鍵を設定します。
validating-public-key-id=検証用の公開鍵ID
identity-provider.validating-public-key-id.tooltip=鍵IDの場合、上記の検証用の公開鍵の明示的なID。外部IDPで指定された鍵IDに関係なく、上記の鍵を常に使用する必要がある場合は空白のままにしてください。鍵を使用する必要がある場合、外部IDPからの鍵IDが一致するかどうかを確認するためにのみ設定します。
allowed-clock-skew=許容されるクロックスキュー
identity-provider.allowed-clock-skew.tooltip=アイデンティティプロバイダーのトークンの検証時に許容されるクロックスキュー（秒単位）。デフォルト値は0です。
forwarded-query-parameters=転送されるクエリー・パラメーター
identity-provider.forwarded-query-parameters.tooltip=最初のアプリケーションへのリクエストから取得し、外部IDPの認可エンドポイントへ転送されるOpenID Connect/OAuth標準以外のクエリー･パラメーター。複数のパラメーターをカンマ（,）で区切って入力できます。
import-external-idp-config=外部 IDP 設定のインポート
import-external-idp-config.tooltip=外部 IDP メタデータを設定ファイルよりロード、または URL よりダウンロードして設定します。
import-from-url=URL よりインポート
identity-provider.import-from-url.tooltip=リモート IDP ディスカバリディスクリプタよりメタデータをインポートします。
import-from-file=ファイルよりインポート
identity-provider.import-from-file.tooltip=ダウンロードした IDP ディスカバリディスクリプタよりメタデータをインポートします。
saml-config=SAML 設定
identity-provider.saml-config.tooltip=SAML SP と 外部 IDP の設定です。
single-signon-service-url=シングルサインオンサービスの URL
saml.single-signon-service-url.tooltip=認証リクエスト (SAML AuthnRequest) の送信に使用する URL を設定します。
single-logout-service-url=シングルログアウトサービスの URL
saml.single-logout-service-url.tooltip=ログアウトリクエストの送信に使用する URL を設定します。
nameid-policy-format=Name ID ポリシーフォーマット
nameid-policy-format.tooltip=Name ID フォーマットに対応する URI リファレンスを指定します。デフォルトは urn:oasis:names:tc:SAML:2.0:nameid-format:persistent になります。
http-post-binding-response=HTTP-POST Binding レスポンス
http-post-binding-response.tooltip=HTTP-POST Binding を使用してリクエストに応答するかどうかを設定します。オフの場合は、HTTP-REDIRECT Binding が使用されます。
http-post-binding-for-authn-request=AuthnRequest の HTTP-POST Binding
http-post-binding-for-authn-request.tooltip=HTTP-POST Binding を使用して AuthnRequest を送信するかどうかを設定します。オフの場合は、HTTP-REDIRECT Binding が使用されます。
http-post-binding-logout=HTTP-POST Binding ログアウト
http-post-binding-logout.tooltip=HTTP-POST Binding を使用してリクエストに応答するかどうかを設定します。オフの場合、HTTP-REDIRECT Binding が使用されます。
want-authn-requests-signed=AuthnRequest の署名が必要
want-authn-requests-signed.tooltip=アイデンティティプロバイダーが署名付きAuthnRequestを要求するかどうかを設定します。
want-assertions-signed=アサーションの署名が必要
want-assertions-signed.tooltip=このサービスプロバイダーが署名付きアサーションを要求するかどうかを設定します。
want-assertions-encrypted=アサーションの暗号化が必要
want-assertions-encrypted.tooltip=このサービスプロバイダーが暗号化されたアサーションを期待するかどうかを設定します。
force-authentication=認証を強制
identity-provider.force-authentication.tooltip=アイデンティティ プロバイダーが以前のセキュリティコンテキストに頼るのではなく、プレゼンターを直接認証すべきかどうかを設定します。
validate-signature=署名検証
saml.validate-signature.tooltip=SAML レスポンスの署名検証の有効/無効を設定します。
validating-x509-certificate=検証用の X509 証明書
validating-x509-certificate.tooltip=署名の確認に使用する PEM 形式の証明書を設定します。
saml.import-from-url.tooltip=リモート IDP の SAML エンティティディスクリプタからメタデータをインポートします。
social.client-id.tooltip=アイデンティティ プロバイダーで登録されているクライアント識別子を設定します。
social.client-secret.tooltip=アイデンティティ プロバイダーで登録されているクライアントシークレットを設定します。
social.default-scopes.tooltip=認可要求の際に送信されるスコープを設定します。設定可能な値、区切り文字、デフォルト値はドキュメントを参照してください。
key=Key
stackoverflow.key.tooltip=Stack Overflow のクライアント登録で取得した Key を設定します。
openshift.base-url=ベースURL
openshift.base-url.tooltip=OpenShift Online APIのベースURL
openshift4.base-url=ベースURL
openshift4.base-url.tooltip=OpenShift Online APIのベースURL
gitlab-application-id=アプリケーションID
gitlab-application-secret=アプリケーションシークレット
gitlab.application-id.tooltip=GitLabアプリケーションのアカウントメニューで作成したアプリケーションのアプリケーションID
gitlab.application-secret.tooltip=GitLabアプリケーションのアカウントメニューで作成したアプリケーションのシークレット
gitlab.default-scopes.tooltip=ログイン時に要求するスコープ。openidは常に要求されます。何も指定しない場合は、さらにapiを追加します。
bitbucket-consumer-key=コンシューマーキー
bitbucket-consumer-secret=コンシューマーシークレット
bitbucket.key.tooltip=Bitbucket OAuthコンシューマーキー
bitbucket.secret.tooltip=Bitbucket OAuthコンシューマーシークレット
bitbucket.default-scopes.tooltip=ログイン時に要求するスコープ。何も指定しなければ、scopeはデフォルトで「email」になります。
# User federation
sync-ldap-roles-to-keycloak=LDAP ロールを Keycloak に同期
sync-keycloak-roles-to-ldap=Keycloak ロールを LDAP に同期
sync-ldap-groups-to-keycloak=LDAP グループを Keycloak に同期
sync-keycloak-groups-to-ldap=Keycloak グループを LDAP に同期
realms=レルム
realm=レルム
identity-provider-mappers=アイデンティティ プロバイダー マッパー
create-identity-provider-mapper=アイデンティティ プロバイダー マッパーを作成
add-identity-provider-mapper=アイデンティティ プロバイダー マッパーを追加
client.description.tooltip=クライアントの説明を指定します。例えば 「タイムシート用のクライアント」 です。ローカライズ用のキーもサポートしています。例\: ${my_client_description}
expires=有効期限
expiration=有効期限
expiration.tooltip=トークンの有効期間を指定します。
count=カウント
count.tooltip=このトークンを利用してクライアントをいくつ作成可能か指定します。
remainingCount=残りのカウント
created=作成日時
back=戻る
initial-access-tokens=初期アクセストークン
add-initial-access-tokens=初期アクセストークンを追加
initial-access-token=初期アクセストークン
initial-access.copyPaste.tooltip=このページから移動する前に初期アクセストークンをコピー/ペーストします。後で検索することはできません。
continue=続ける
initial-access-token.confirm.title=初期アクセストークンのコピー
initial-access-token.confirm.text=後からは取得することはできませんので、初期アクセストークンのコピー & ペーストを行ってください
no-initial-access-available=使用可能な初期アクセストークンはありません
client-reg-policies=クライアント登録ポリシー
client-reg-policy.name.tooltip=ポリシーの表示名を設定します。
anonymous-policies=Anonymous アクセスのポリシー
anonymous-policies.tooltip=これらのポリシーはクライアント登録サービスが未認証リクエストによって呼び出された際に使用されます。これは、リクエストには初期アクセストークンも Bearer トークンも含まれないことを意味します。
auth-policies=認証済みアクセスのポリシー
auth-policies.tooltip=これらのポリシーは認証されたリクエストによってクライアント登録サービスが呼び出された際に使用されます。これは、リクエストに初期アクセストークンまたは Bearer トークンが含まれていることを意味します。
policy-name=ポリシー名
no-client-reg-policies-configured=クライアント登録ポリシーはありません。
trusted-hosts.label=信頼されたホスト
trusted-hosts.tooltip=信頼され、クライアント登録サービスを呼び出すことが許可されている、および/またはクライアント URI の値として使用されているホストのリストを設定します。ホスト名または IP アドレスを使用して設定します。スター (例えば 「* .example.com」) を使用すると、example.com のドメイン全体が信頼されます。
host-sending-registration-request-must-match.label=クライアント登録リクエストを送信するホストの一致が必須
host-sending-registration-request-must-match.tooltip=有効とした場合は、信頼されたホストまたはドメインから送信されたクライアント登録サービスへのリクエストは許可されます。
client-uris-must-match.label=クライアント URI の一致が必須
client-uris-must-match.tooltip=有効とした場合は、すべてのクライアント URI (リダイレクト URI など) は、信頼されたホストまたはドメインと一致する場合にのみ許可されます。
allowed-protocol-mappers.label=許可されたプロトコルマッパー
allowed-protocol-mappers.tooltip=許可されたプロトコルマッパープロバイダーのホワイトリストを設定します。ホワイトリストに登録されていないプロトコルマッパーを含むクライアントを登録しようとすると、登録リクエストは拒否されます。
consent-required-for-all-mappers.label=マッパーの同意が必要
consent-required-for-all-mappers.tooltip=有効とした場合は、新たに登録されたすべてのプロトコルマッパーは自動的に 「同意が必要」 が有効となります。これは、ユーザーが同意画面で承認する必要があることを意味します。注記: 同意画面は、クライアントが 「同意が必要」 を有効にしている場合にのみ表示されます。そのため、通常は同意が必要なポリシーとともに使用します。
allowed-client-scopes.label=許可されたクライアントスコープ
allowed-client-scopes.tooltip=クライアントスコープのホワイトリスト。新しく登録されたクライアントで使用できます。 ホワイトリストに登録されていないクライアントスコープをクライアントに登録しようとすると、拒否されます。 デフォルトでは、ホワイトリストは空かレルムのデフォルトのクライアントスコープが含まれているかのいずれかです（「デフォルトスコープの許可」設定プロパティに基づいています）。
allow-default-scopes.label=許可されたデフォルトスコープ
allow-default-scopes.tooltip=オンの場合、新規に登録されたクライアントは、レルムのデフォルトのクライアントスコープか、レルムのオプションのクライアントスコープに記述されたクライアントスコープを持つことが許可されます。
max-clients.label=レルムあたりの最大クライアント数
max-clients.tooltip=レルム内の既存のクライアントの数が設定された制限と同じかそれ以上の場合は、新しいクライアントを登録することはできません。

client-scopes=クライアントスコープ
client-scopes.tooltip=クライアントスコープを使用すると、複数のクライアント間で共有されるプロトコルマッパーとロールの共通セットを定義できます

groups=グループ

group.add-selected.tooltip=グループにアサイン可能なレルムロールです。
group.assigned-roles.tooltip=グループにマッピングされたレルムロールです。
group.effective-roles.tooltip=マッピングされているすべてのレルムロールです。複合ロールより引き継いでいるロールも含みます。
group.available-roles.tooltip=このクライアントよりアサイン可能なロールです。
group.assigned-roles-client.tooltip=マッピングされたこのクライアントのロールです。
group.effective-roles-client.tooltip=マッピングされたこのクライアントのロールです。複合ロールより引き継いでいるロールも含みます。

default-roles=デフォルトロール
no-realm-roles-available=使用可能なレルムロールはありません

users=ユーザー
user.add-selected.tooltip=ユーザーにアサイン可能なレルムロールです。
user.assigned-roles.tooltip=ユーザーにマッピングされたレルムロールです。
user.effective-roles.tooltip=マッピングされているすべてのレルムロールです。複合ロールより引き継いでいるロールも含みます。
user.available-roles.tooltip=このクライアントよりアサイン可能なロールです。
user.assigned-roles-client.tooltip=マッピングされたこのクライアントのロールです。
user.effective-roles-client.tooltip=マッピングされたこのクライアントのロールです。複合ロールより引き継いでいるロールも含みます。
default.available-roles.tooltip=アサイン可能なレルムレベルのロールです。
realm-default-roles=レルムのデフォルトロール
realm-default-roles.tooltip=ユーザーにアサインされたレルムレベルのロールです。
default.available-roles-client.tooltip=デフォルトでアサイン可能なこのクライアントのロールです。
client-default-roles=クライアントのデフォルトロール
client-default-roles.tooltip=デフォルトロールとしてアサインされたこのクライアントのロールです。
composite.available-roles.tooltip=この複合ロールに関連付け可能なレルムレベルのロールです。
composite.associated-roles.tooltip=この複合ロールに関連付けされているレルムレベルのロールです。
composite.available-roles-client.tooltip=この複合ロールに関連付け可能なこのクライアントのロールです。
composite.associated-roles-client.tooltip=この複合ロールに関連付けされているクライアントロールです。
partial-import=部分インポート
partial-import.tooltip=部分インポートでは、以前にエクスポートした JSON ファイルよりユーザー、クライアント、およびその他のリソースをインポートすることができます。

file=ファイル
exported-json-file=エクスポートされた JSON ファイル
import-from-realm=レルムからインポート
import-users=ユーザーをインポート
import-groups=グループをインポート
import-clients=クライアントをインポート
import-identity-providers=アイデンティティ プロバイダーをインポート
import-realm-roles=レルムロールをインポート
import-client-roles=クライアントロールをインポート
if-resource-exists=リソースが存在する場合
fail=失敗
skip=スキップ
overwrite=上書き
if-resource-exists.tooltip=既に存在するリソースをインポートしようとした場合にどうすべきかを指定します。

partial-export=部分エクスポート
partial-export.tooltip=部分エクスポートでは、レルム設定やその他の関連リソースをjsonファイルにエクスポートできます。
export-groups-and-roles=グループとロールのエクスポート
export-clients=クライアントのエクスポート

action=アクション
role-selector=ロールの選択
realm-roles.tooltip=選択可能なレルムロールです。

select-a-role=ロールを選択してください
select-realm-role=レルムロールを選択
client-roles.tooltip=選択可能なクライアントロールです。
select-client-role=クライアントロールを選択

client-saml-endpoint=クライアント SAML エンドポイント
add-client-scope=クライアントスコープの追加

default-client-scopes=デフォルトのクライアントスコープ
default-client-scopes.tooltip=作成された各クライアントに自動的に追加されるクライアントスコープ
default-client-scopes.default=デフォルトのクライアントスコープ
default-client-scopes.default.tooltip=作成された各クライアントにデフォルトスコープとして追加されるクライアントスコープの定義を許可する
default-client-scopes.default.available=利用可能なクライアントスコープ
default-client-scopes.default.available.tooltip=レルムのデフォルトまたはオプションのスコープとして割り当てられていないクライアントスコープ
default-client-scopes.default.assigned=割り当てられたデフォルトのクライアントスコープ
default-client-scopes.default.assigned.tooltip=作成された各クライアントにデフォルトスコープとして追加されるクライアントスコープ
default-client-scopes.optional=オプションのクライアントスコープ
default-client-scopes.optional.tooltip=作成された各クライアントにオプションのスコープとして追加されるクライアントスコープの定義を許可する
default-client-scopes.optional.available=利用可能なクライアントスコープ
default-client-scopes.optional.available.tooltip=レルムのデフォルトまたはオプションのスコープとして割り当てられていないクライアントスコープ
default-client-scopes.optional.assigned=割り当てられたオプションのクライアントスコープ
default-client-scopes.optional.assigned.tooltip=作成された各クライアントにオプションのスコープとして追加されるクライアントスコープ

client-scopes.setup=セットアップ
client-scopes.setup.tooltip=このクライアントにリンクされたクライアントスコープを設定できるようにします
client-scopes.default=デフォルトのクライアントスコープ
client-scopes.default.tooltip=このクライアントにトークンを発行する際に、デフォルトのクライアントスコープが常に適用されます。プロトコルマッパーとロールスコープのマッピングは、OIDC認可リクエストで使用されているスコープパラメーターの値に関係なく常に適用されます
client-scopes.default.available=利用可能なクライアントスコープ
client-scopes.default.available.tooltip=デフォルトまたはオプションのスコープとして割り当てられていないクライアントスコープ
client-scopes.default.assigned=割り当てられたデフォルトのクライアントスコープ
client-scopes.default.assigned.tooltip=このクライアントのトークンを生成する際に、デフォルトスコープとして使用されるクライアントスコープ
client-scopes.optional=オプションのクライアントスコープ
client-scopes.optional.tooltip=このクライアントのトークンを発行する際に、適用されるオプションのクライアントスコープ。ただし、OIDC認可リクエストのスコープパラメーターによって要求された場合のみ
client-scopes.optional.available=利用可能なクライアントスコープ
client-scopes.optional.available.tooltip=デフォルトまたはオプションのスコープとして割り当てられていないクライアントスコープ
client-scopes.optional.assigned=割り当てられたオプションのクライアントスコープ
client-scopes.optional.assigned.tooltip=このクライアントのトークンを生成する際に、オプションのスコープとして使用できるクライアントスコープ

client-scopes.evaluate=評価
client-scopes.evaluate.tooltip=このクライアントに発行されたトークンで使用されるすべてのプロトコルマッパーとロールスコープのマッピングを表示することを許可します。また、提供されたスコープパラメーターに基づいてサンプルアクセストークンを生成することもできます
scope-parameter=スコープパラメーター
scope-parameter.tooltip=このスコープパラメーターの値をコピー/ペーストし、このクライアントアダプターから送信された最初のOpenID Connect認証リクエストで使用できます。このクライアントに発行されたトークンを生成するときは、デフォルトのクライアントスコープと選択されたオプションのクライアントスコープが使用されます
client-scopes.evaluate.scopes=クライアントスコープ
client-scopes.evaluate.scopes.tooltip=このクライアントに発行されたトークンを生成する際に使用されるオプションのクライアントスコープを選択することを許可します
client-scopes.evaluate.scopes.available=利用可能なオプションのクライアントスコープ
client-scopes.evaluate.scopes.available.tooltip=これにはオプションのクライアントスコープが含まれています。このスコープは、このクライアントのアクセストークンを発行するときにオプションで使用できます
client-scopes.evaluate.scopes.assigned=選択されたオプションのクライアントスコープ
client-scopes.evaluate.scopes.assigned.tooltip=選択されたオプションのクライアントスコープは、このクライアントのアクセストークンを発行するときに使用されます。これらのオプションのクライアントスコープを最初のOpenID Connect認証リクエストがクライアントアダプターから送信されたときに適用する場合、OAuthスコープパラメーターのどの値を使用する必要があるかを上で見ることができます
client-scopes.evaluate.scopes.effective=有効なクライアントスコープ
client-scopes.evaluate.scopes.effective.tooltip=すべてのデフォルトのクライアントスコープと選択されたオプションのスコープが含まれます。クライアントに発行されたアクセストークンを生成するときに、すべてのクライアントスコープのすべてのプロトコルマッパーとロールスコープのマッピングが使用されます
client-scopes.evaluate.user.tooltip=必要に応じて、サンプルのアクセストークンを生成するユーザーを選択します。ユーザーを選択しないと、評価中にサンプルのアクセストークンは生成されません
send-evaluation-request=評価
send-evaluation-request.tooltip=これをクリックすると、このクライアントにアクセストークンを発行するときに使用されるすべてのプロトコルマッパーとロールスコープのマッピングが表示されます。いくつかのユーザーが選択された場合には、オプションでサンプルのアクセストークンも生成されます

evaluated-protocol-mappers=有効なプロトコルマッパー
evaluated-protocol-mappers.tooltip=このクライアントにトークンを発行する際に使用されるすべての有効なプロトコルマッパーを表示できます。選択されたオプションのクライアントスコープのプロトコルマッパーも含まれます。プロトコルマッパーごとに、どのクライアントスコープから継承されているかを見ることができます
evaluated-roles=有効なロールスコープマッピング
evaluated-roles.tooltip=このクライアントにトークンを発行するときに使用されるすべての有効なロールスコープマッピングを表示できます。選択したオプションのクライアントスコープのロールスコープマッピングも含まれます。
parent-client-scope=親クライアントスコープ
client-scopes.evaluate.not-granted-roles=許可されていないロール
client-scopes.evaluate.not-granted-roles.tooltip=クライアントには、これらのロールのスコープマッピングがありません。これらのロールは、認証されたユーザーがそれらのメンバーであっても、このクライアントに発行されるアクセストークンには含まれません
client-scopes.evaluate.granted-realm-effective-roles=付与された有効なレルムロール
client-scopes.evaluate.granted-realm-effective-roles.tooltip=クライアントには、これらのロールのスコープマッピングがあります。認証されたユーザーがそれらのメンバーである場合、これらのロールはこのクライアントに発行されるアクセストークンに含まれます
client-scopes.evaluate.granted-client-effective-roles=付与された有効なクライアントロール
generated-access-token=生成されたアクセストークン
generated-access-token.tooltip=選択されたユーザーが認証されると生成され、クライアントに送信されるトークンのサンプルを参照してください。トークンには、有効なプロトコルマッパーとロールスコープのマッピングに基づいて、またユーザー自身に割り当てられたクレーム/ロールに基づいた、クレームとロールが表示されます

manage=管理
authentication=認証
user-federation=ユーザーフェデレーション
user-storage=ユーザーストレージ
events=イベント
realm-settings=レルムの設定
configure=設定
select-realm=レルムの選択
add=追加

client-storage=クライアントストレージ
no-client-storage-providers-configured=クライアントストレージプロバイダーが設定されていません
client-stores.tooltip=Keycloakは、クライアントとその詳細を外部ストアから取得できます。

client-scope.name.tooltip=クライアントスコープの名前。レルム内でユニークでなければなりません。スコープパラメーターの値として使用されるため、名前には空白文字を含めないでください
client-scope.description.tooltip=クライアントスコープの説明
client-scope.protocol.tooltip=このクライアントスコープによって提供されているSSOプロトコル設定がどれか
client-scope.display-on-consent-screen=同意画面で表示する
client-scope.display-on-consent-screen.tooltip=オンで、このクライアントスコープが同意が必要なクライアントに追加された場合、「同意画面のテキスト」で指定されたテキストが同意画面に表示されます。オフの場合、このクライアントスコープは同意画面に表示されません
client-scope.consent-screen-text=同意画面のテキスト
client-scope.consent-screen-text.tooltip=このクライアントスコープが同意が必要なクライアントに追加された場合に、同意画面に表示されるテキスト。指定しない場合は、デフォルトでクライアントスコープの名前になります
client-scope.gui-order=GUI順序
client-scope.gui-order.tooltip=GUI（例：同意ページ）でのプロバイダーの順序をに整数で指定します。
client-scope.include-in-token-scope=トークンスコープに含める
client-scope.include-in-token-scope.tooltip=オンの場合、このクライアント・スコープの名前がアクセストークン・プロパティーの「scope」と同様にトークン・イントロスペクション・エンドポイントのレスポンスに追加されます。オフの場合、このクライアント・スコープはトークンとトークン・イントロスペクション・エンドポイントのレスポンスから除外されます。

add-user-federation-provider=ユーザー フェデレーション プロバイダーの追加
add-user-storage-provider=ユーザー ストレージ プロバイダーの追加
required-settings=必要な設定
provider-id=プロバイダー ID
console-display-name=コンソール表示名
console-display-name.tooltip=管理コンソール内でのリンク表示名を設定します。
priority=優先度
priority.tooltip=ユーザーを検索する際のプロバイダーの優先度を設定します。低い順となります。
user-storage.enabled.tooltip=プロバイダーが無効になっている場合、クエリーは考慮されず、プロバイダーが再度有効になるまで、インポートされたユーザーは無効かつ読み取り専用になります。
sync-settings=同期の設定
periodic-full-sync=定期的なフル同期
periodic-full-sync.tooltip=プロバイダーユーザーの Keycloak への定期的なフル同期を有効または無効とすべきかを設定します。
full-sync-period=フル同期の周期
full-sync-period.tooltip=フル同期の周期を秒で設定します。
periodic-changed-users-sync=定期的な変更ユーザーの同期
periodic-changed-users-sync.tooltip=変更または新規作成されたプロバイダーユーザーの Keycloak への定期的な同期を有効または無効とすべきか設定します。
changed-users-sync-period=変更ユーザーの同期周期
changed-users-sync-period.tooltip=変更または新規作成されたプロバイダーユーザーの同期周期を秒で設定します。
synchronize-changed-users=変更ユーザーを同期
synchronize-all-users=すべてのユーザーを同期
remove-imported-users=インポートを削除
unlink-users=ユーザーのリンクを解除する
kerberos-realm=Kerberos レルム
kerberos-realm.tooltip=Kerberos レルムの名前を設定します。例えば、 FOO.ORG です。
server-principal=サーバープリンシパル
server-principal.tooltip=サーバー、ドメイン名を含む HTTP サービスのサービスプリンシパルのフルネームを設定します。例えば、 HTTP/host.foo.org@FOO.ORG です。
keytab=KeyTab
keytab.tooltip=サーバープリンシパルのクレデンシャルを含む Kerberos の KeyTab ファイルを設定します。例えば、/etc/krb5.keytab です。
debug=デバッグ
debug.tooltip=Krb5LoginModule の標準出力へのデバッグロギングの有効/無効を設定します。
allow-password-authentication=パスワード認証を許可
allow-password-authentication.tooltip=Kerberos データベースに対するユーザー名/パスワード認証の有効/無効を設定します。
edit-mode=編集モード
edit-mode.tooltip=READ_ONLYは、パスワード更新が許可されず、ユーザーが常にKerberosパスワードで認証されることを意味します。UNSYNCEDは、ユーザーがKeycloakデータベースでパスワードを変更できることを意味し、このパスワードはKerberosパスワードの代わりに使用されます
ldap.edit-mode.tooltip=READ_ONLYは、読み取り専用のLDAPストアです。WRITABLEは、必要に応じてデータをLDAPに同期させることを意味します。UNSYNCEDは、ユーザーデータをインポートするが、LDAPに同期しないことを意味します。
update-profile-first-login=初回ログイン時にプロフィールを更新
update-profile-first-login.tooltip=初回ログイン時のプロフィール更新の有効/無効を設定します。
sync-registrations=登録の同期
ldap.sync-registrations.tooltip=LDAP ストア内に新規作成ユーザーを作成すべきかどうかを設定します。どのプロバイダーが新しいユーザーの同期先に選択されるかは、優先度が影響します。
import-enabled=ユーザーのインポート
ldap.import-enabled.tooltip=trueの場合、LDAPユーザーはKeycloak DBにインポートされ、設定された同期ポリシーによって同期されます。
vendor=ベンダー
ldap.vendor.tooltip=LDAP ベンダー (プロバイダー)
username-ldap-attribute=ユーザー名の LDAP 属性
ldap-attribute-name-for-username=ユーザー名の LDAP 属性名
username-ldap-attribute.tooltip=Keycloak ユーザー名にマッピングされる LDAP 属性名を設定します。多くの LDAP サーバーベンダーでは 「uid」 となります。Active Directory では 「sAMAccountName」 または 「cn」 となります。LDAP から Keycloak にインポートするすべての LDAP ユーザーのレコードで、属性は入力されているはずです。
rdn-ldap-attribute=RDN LDAP 属性
ldap-attribute-name-for-user-rdn=ユーザー RDN の LDAP 属性名
rdn-ldap-attribute.tooltip=一般的なユーザー DN の RDN (top 属性) として使用される LDAP 属性名を設定します。通常は、ユーザー名の LDAP 属性 と同じですが、必須ではありません。例えば Active Directory では、ユーザー名が 「sAMAccountName」 だと RDN 属性として 「cn」 を使用するのが一般的です。
uuid-ldap-attribute=UUID LDAP 属性
ldap-attribute-name-for-uuid=UUID の LDAP 属性名
uuid-ldap-attribute.tooltip=LDAP 内でオブジェクトのユニークなオブジェクト識別子 (UUID) として使用される LDAP 属性名を設定します。多くの LDAP サーバーベンダーでは 「entryUUID」 となりますが、異なる場合もあります。例えば Active Directory では、 「objectGUID」 となります。お使いの LDAP サーバーが UUID をサポートしていない場合は、ツリー内の LDAP ユーザーの中でユニークとなる他の属性を使用することができます。例えば、 「uid」 や 「entryDN」 です。
user-object-classes=ユーザーオブジェクトクラス
ldap-user-object-classes.placeholder=LDAP のユーザーオブジェクトクラス (カンマ区切り)
ldap-connection-url=LDAP 接続 URL
ldap-users-dn=LDAP ユーザー DN
ldap-bind-dn=LDAP Bind DN
ldap-bind-credentials=LDAP Bind のクレデンシャル
ldap-filter=LDAP フィルター
ldap.user-object-classes.tooltip=LDAP ユーザー用の すべての LDAP オブジェクトクラスをカンマ区切りで設定します。例: 「inetOrgPerson, organizationalPerson」 。新規作成された Keycloak ユーザーは、これらすべてのオブジェクトクラスを使用して LDAP に書き込まれます。また、既存の LDAP ユーザーのレコードは、これらすべてのオブジェクトクラスを含む場合だけ発見されます。
connection-url=接続 URL
ldap.connection-url.tooltip=お使いの LDAP サーバーへの接続 URL
test-connection=接続テスト
users-dn=ユーザー DN
ldap.users-dn.tooltip=ユーザーがいる LDAP ツリーの完全 DN を設定します。この DN は LDAP ユーザーの親になります。例えば、典型的なユーザーは 「uid=john,ou=users,dc=example,dc=com」 のような DN となりますが、この場合は 「ou=users,dc=example,dc=com」 となります。
authentication-type=バインドタイプ
ldap.authentication-type.tooltip=LDAPバインド操作中に使用される認証方式のタイプ。LDAPサーバーに送信されるほとんどのリクエストで使用されます。現時点では「none」（匿名LDAP認証）または「simple」（クレデンシャル・バインド + パスワード・バインドの認証）のメカニズムしか利用できません。
bind-dn=Bind DN
ldap.bind-dn.tooltip=Keycloak が LDAP サーバーにアクセスするために使用する LDAP 管理者の DN を設定します。
bind-credential=Bind のクレデンシャル
ldap.bind-credential.tooltip=LDAP 管理者のパスワードを設定します。
test-authentication=認証テスト
custom-user-ldap-filter=カスタムユーザー LDAP フィルター
ldap.custom-user-ldap-filter.tooltip=ユーザー検索のフィルタリングを行う LDAP フィルターを設定します。追加のフィルターが必要ない場合は空のままにしてください。設定は、 「(」 から始まり 「)」 で終わることを確認してください。
search-scope=検索スコープ
ldap.search-scope.tooltip=One Level では、ユーザー DN で指定された DN 内のユーザーのみを検索します。subtree では、サブツリー全体を検索します。より詳細については LDAP のドキュメントを参照してください。
use-truststore-spi=トラストストア SPI を使用
ldap.use-truststore-spi.tooltip=LDAP 接続で、standalone.xml/domain.xml で設定されたトラストストアの トラストストア SPI を使用するかどうかを指定します。 「Always」 は常に使用することを意味します。 「Never」 は使用しないことを意味します。 「Only for ldaps」 は、接続 URL が ldaps の場合に使用することを意味します。standalone.xml/domain.xml で設定されていない場合でも、デフォルトの Java CA 証明書 (cacerts) や 「javax.net.ssl.trustStore」 プロパティで指定された証明書が使用される点に注意してください。
validate-password-policy=パスワードポリシーの検証
connection-pooling=接続プーリング
connection-pooling-settings=接続プーリングの設定
connection-pooling-authentication=接続プーリング認証
connection-pooling-authentication-default=none simple
connection-pooling-debug=接続プールのデバッグレベル
connection-pooling-debug-default=オフ
connection-pooling-initsize=接続プールの初期サイズ
connection-pooling-initsize-default=1
connection-pooling-maxsize=接続プールの最大サイズ
connection-pooling-maxsize-default=1000
connection-pooling-prefsize=接続プールの推奨サイズ
connection-pooling-prefsize-default=5
connection-pooling-protocol=接続プールのプロトコル
connection-pooling-protocol-default=plain
connection-pooling-timeout=接続プールのタイムアウト
connection-pooling-timeout-default=300000
ldap-connection-timeout=接続タイムアウト
ldap.connection-timeout.tooltip=LDAP接続タイムアウト（ミリ秒単位）
ldap-read-timeout=読み取りタイムアウト
ldap.read-timeout.tooltip=LDAP読み取りタイムアウト（ミリ秒単位）。このタイムアウトはLDAP読み取り操作に適用されます
ldap.validate-password-policy.tooltip=パスワードを更新する前に、Keycloakはパスワードポリシーでパスワードを検証する必要があります
ldap.connection-pooling.tooltip=Keycloak は LDAP サーバーへのアクセスで接続プールを使用するかどうかを設定します。
ldap.connection-pooling.authentication.tooltip=プール可能な接続の認証タイプのリスト（スペース区切り）。有効なタイプは「none」、「simple」、「DIGEST-MD5」です。
ldap.connection-pooling.debug.tooltip=生成するデバッグ出力のレベルを示す文字列。有効な値は、「fine」（接続の作成と削除のトレース）と「all」（すべてのデバッグ情報）です。
ldap.connection-pooling.initsize.tooltip=アイデンティティ用に最初に接続を作成するときに作成する接続アイデンティティごとの接続数を表す整数の文字列表現。
ldap.connection-pooling.maxsize.tooltip=接続アイデンティティごとに同時に維持できる接続の最大数を表す整数の文字列表現。
ldap.connection-pooling.prefsize.tooltip=同時に維持する必要がある接続アイデンティティごとの優先接続数を表す整数の文字列表現。
ldap.connection-pooling.protocol.tooltip=プール可能な接続のプロトコルタイプのリスト（スペース区切り）。有効なタイプは「plain」と「ssl」です。
ldap.connection-pooling.timeout.tooltip=アイドル状態の接続がクローズされず、プールからも削除されないままプールに残る時間（ミリ秒）を表す整数の文字列表現。
ldap.pagination.tooltip=LDAP サーバーはページネーションをサポートするかどうかを設定します。
ldap.startTls.tooltip=STARTTLSを使用してLDAPへの接続を暗号化します。これにより接続プールが無効になります。
kerberos-integration=Kerberos と統合
allow-kerberos-authentication=Kerberos 認証を許可
ldap.allow-kerberos-authentication.tooltip=SPNEGO/Kerberos のトークンを持つユーザーの HTTP 認証を有効/無効にします。認証されたユーザーに関するデータはこの LDAP サーバーよりプロビジョニングされます。
use-kerberos-for-password-authentication=パスワード認証に Kerberos を使用
ldap.use-kerberos-for-password-authentication.tooltip=LDAP サーバーに対してディレクトリサービスの API で認証する代わりに、Kerberos に対して ユーザー名/パスワード認証する Kerberos ログインモジュールを使用します。
batch-size=バッチサイズ
ldap.batch-size.tooltip=1トランザクションで LDAP から Keycloak にインポートされる LDAP ユーザー数を設定します。
ldap.periodic-full-sync.tooltip=Keycloak への LDAP ユーザーの定期的なフル同期を有効/無効にします。
ldap.periodic-changed-users-sync.tooltip=Keycloak への 変更または新規作成された LDAP ユーザーの定期的な同期を有効/無効にします。
ldap.changed-users-sync-period.tooltip=変更または新規作成された LDAP ユーザーの同期周期を秒で設定します。
user-federation-mappers=ユーザーフェデレーションのマッパー
create-user-federation-mapper=ユーザーフェデレーション マッパーの作成
add-user-federation-mapper=ユーザーフェデレーション マッパーの追加
provider-name=プロバイダー名
no-user-federation-providers-configured=設定されているユーザーフェデレーション プロバイダーはありません
no-user-storage-providers-configured=設定されているユーザーストレージ プロバイダーはありません
add-identity-provider=アイデンティティ プロバイダーの登録
add-identity-provider-link=アイデンティティ プロバイダーのリンク登録
identity-provider=アイデンティティ プロバイダー
identity-provider-user-id=アイデンティティ プロバイダーのユーザー ID
identity-provider-user-id.tooltip=アイデンティティ プロバイダー側のユーザーのユニーク ID です。
identity-provider-username=アイデンティティ プロバイダーのユーザー名
identity-provider-username.tooltip=アイデンティティ プロバイダー側のユーザー名です。
pagination=ページネーション
browser-flow=ブラウザーフロー
browser-flow.tooltip=ブラウザー認証で使用したいフローを選択してください。
registration-flow=登録フロー
registration-flow.tooltip=登録で使用したいフローを選択してください。
direct-grant-flow=ダイレクトグラントフロー
direct-grant-flow.tooltip=ダイレクトグラント認証で使用したいフローを選択してください。
reset-credentials=クレデンシャルのリセット
reset-credentials.tooltip=ユーザーがクレデンシャルを忘れた際に使用したいフローを選択してください。
client-authentication=クライアント認証
client-authentication.tooltip=クライアント認証で使用したいフローを選択してください。
docker-auth=Docker認証
docker-auth.tooltip=Dockerクライアントに対する認証に使用するフローを選択します。
new=新規作成
copy=コピー
add-execution=Execution を追加
add-flow=フローを追加
auth-type=認証タイプ
requirement=必要条件
config=設定
no-executions-available=使用可能な Execution がありません
authentication-flows=認証フロー
create-authenticator-config=認証設定の作成
authenticator.alias.tooltip=この設定の名前を設定します。
otp-type=OTP タイプ
time-based=タイムベース
counter-based=カウンターベース
otp-type.tooltip=OTP はタイムベースのワンタイムパスワードです。 「hotp」 は、サーバーでハッシュに対してカウンターを保持するカウンターベースのワンタイムパスワードです。
otp-hash-algorithm=OTP ハッシュアルゴリズム
otp-hash-algorithm.tooltip=OTP を生成するのにどのハッシュアルゴリズムを使用するか設定します。
number-of-digits=桁数
otp.number-of-digits.tooltip=OTP の桁数を設定します。
look-ahead-window=先読みウィンドウ
otp.look-ahead-window.tooltip=トークンジェネレーターとサーバーが時刻同期またはカウンター同期していないことを考慮してどれくらい先読みを行うか設定します。
initial-counter=初期カウンター
otp.initial-counter.tooltip=初期カウンターの値は何とするか設定します。
otp-token-period=OTP トークンの期間
otp-token-period.tooltip=OTP トークンは何秒有効とするか設定します。デフォルトは30秒です。
otp-supported-applications=サポートされるアプリケーション
otp-supported-applications.tooltip=現在のOTPポリシーで動作することが分かっているアプリケーション
table-of-password-policies=パスワードポリシーの一覧表
add-policy.placeholder=ポリシーを追加...
policy-type=ポリシーのタイプ
policy-value=ポリシーの値
admin-events=管理イベント
admin-events.tooltip=保存されたレルムの管理イベントを表示します。管理イベントは、アカウント管理に関連したイベント、例えばレルムの作成などです。イベントの保存を有効にするには設定へ移動してください。
login-events=ログインイベント
filter=フィルター
update=更新
reset=リセット
operation-types=操作タイプ
resource-types=リソースタイプ
select-operations.placeholder=操作を選択...
select-resource-types.placeholder=リソースタイプを選択...
resource-path=リソースパス
resource-path.tooltip=リソースパスでフィルタリングします。ワイルドカード'*'をサポートします（例：'users/*'）。
date-(from)=日付 (From)
date-(to)=日付 (To)
authentication-details=認証の詳細
ip-address=IP アドレス
time=日時
operation-type=操作タイプ
resource-type=リソースタイプ
auth=認証
representation=Representation
register=登録
required-action=Required アクション
default-action=デフォルトアクション
auth.default-action.tooltip=有効の場合は、新規ユーザーにはこの Required アクションがアサインされます。
no-required-actions-configured=設定された Required アクションはありません
defaults-to-id=ID がデフォルトになります
flows=フロー
bindings=バインディング
client-flow-bindings=認証フローのオーバーライド
client-flow-bindings.tooltip=レルム認証フローバインディングをオーバーライドします。
required-actions=Required アクション
password-policy=パスワードポリシー
otp-policy=OTP ポリシー
user-groups=ユーザーグループ
default-groups=デフォルトグループ
groups.default-groups.tooltip=新規ユーザーが自動的に参加するグループのセットを設定します。
cut=カット
paste=ペースト
create-group=グループの作成
create-authenticator-execution=認証 Execution の作成
create-form-action-execution=フォームアクション Execution の作成
create-top-level-form=トップレベルフォームの作成
flow.alias.tooltip=フローの表示名を指定します。
top-level-flow-type=トップレベルフロータイプ
flow.generic=generic
flow.client=client
top-level-flow-type.tooltip=どの種類のトップレベルフローを作成しますか? 「client」 タイプは、クライアント (アプリケーション) の認証で使用します。 「generic」 はユーザーと他のすべてで使用します。
create-execution-flow=Execution フローの作成
flow-type=フロータイプ
flow.form.type=form
flow.generic.type=generic
flow-type.tooltip=どの種類のフォームかを設定します。
form-provider=フォームプロバイダー
default-groups.tooltip=新規作成または登録されたユーザーは自動的にこれらのグループに追加されます。
select-a-type.placeholder=タイプを選択してください
available-groups=使用可能なグループ
available-groups.tooltip=デフォルトとして追加したいグループを選択してください。
value=値
table-of-group-members=グループメンバーの一覧表
table-of-role-members=ロールメンバーの一覧表
last-name=姓
first-name=名
email=Eメール
toggle-navigation=ナビゲーションの切り替え
manage-account=アカウントの管理
sign-out=サインアウト
server-info=サーバー情報
resource-not-found=リソースが<strong>見つかりません</strong>...
resource-not-found.instruction=お探しのリソースが見つかりませんでした。入力された URL が正しいかご確認ください。
go-to-the-home-page=ホームページへ移動 &raquo;
page-not-found=ページが<strong>見つかりません</strong>...
page-not-found.instruction=お探しのページが見つかりませんでした。入力された URL が正しいかご確認ください。
events.tooltip=保存されたレルムのイベントを表示します。イベントは、ユーザーアカウントに関連したイベント、例えばログインなどです。イベントの保存を有効にするには設定へ移動してください。
select-event-types.placeholder=イベントタイプを選択...
events-config.tooltip=ユーザーイベントと管理イベントの保存を有効にする設定オプションを表示します。
select-an-action.placeholder=アクションを選択...
event-listeners.tooltip=どのリスナーがレルムのイベントを受け取るか設定します。
login.save-events.tooltip=有効の場合は、ログインイベントがデータベースに保存され、管理コンソールとアカウント管理で使用することができます。
clear-events.tooltip=データベース内のすべてのイベントを削除します。
events.expiration.tooltip=イベントの有効期限を設定します。期限切れのイベントはデータベースから定期的に削除されます。
admin-events-settings=管理イベントの設定
save-events=イベントの保存
admin.save-events.tooltip=有効の場合は、管理イベントがデータベースに保存され、管理コンソールで使用可能になります。
saved-types.tooltip=どのイベントタイプが保存されるかを設定します。
include-representation=Representation を含める
include-representation.tooltip=作成または更新リクエストの JSON Representation を含めるかどうかを設定します。
clear-admin-events.tooltip=データベース内のすべての管理イベントを削除します。
server-version=サーバーのバージョン
server-profile=サーバープロファイル
server-disabled=使用できない機能
server-disabled.tooltip=現在有効になっていない機能。一部の機能はデフォルトでは有効になっていません。これはすべてのプレビュー機能と実験的機能に適用されます。
server-preview=プレビュー機能
server-preview.tooltip=プレビュー機能は本番環境ではサポートされておらず、将来大幅に変更または削除される可能性があります。
server-experimental=実験的機能
server-experimental.tooltip=実験的機能は完全に機能しない可能性がある実験的機能です。本番環境では実験的機能を使用しないでください。
info=情報
providers=プロバイダー
server-time=サーバーの時刻
server-uptime=サーバーの稼働時間
profile=プロファイル
memory=メモリー
total-memory=メモリーの総容量
free-memory=空きメモリー
used-memory=使用メモリー
system=システム
current-working-directory=現在の作業ディレクトリ
java-version=Java バージョン
java-vendor=Java ベンダー
java-runtime=Java ランタイム
java-vm=Java VM
java-vm-version=Java VM バージョン
java-home=Java ホーム
user-name=ユーザー名
user-timezone=ユーザータイムゾーン
user-locale=ユーザーロケール
system-encoding=システムエンコーディング
operating-system=オペレーションシステム
os-architecture=OS アーキテクチャ
spi=SPI
granted-client-scopes=付与されたクライアントスコープ
additional-grants=追加の許可
consent-created-date=作成日
consent-last-updated-date=最終更新日
revoke=取り消し
new-password=新しいパスワード
password-confirmation=新しいパスワード (確認)
reset-password=パスワードをリセット
credentials.temporary.tooltip=有効の場合は、ユーザーは次のログイン時にパスワードの変更が必要となります。
remove-totp=OTPの削除
credentials.remove-totp.tooltip=ユーザーのワンタイムパスワードジェネレーターを削除します。
reset-actions=リセットアクション
credentials.reset-actions.tooltip=ユーザーにリセットアクションEメールを送信するときに実行するアクションのセット。「Verify email」は、Eメールアドレスを確認するためのEメールをユーザーに送信します。「Update profile」は、新しい個人情報を入力する必要があります。「Update password」は、ユーザーが新しいパスワードを入力する必要があります。「Configure OTP」は、モバイルパスワードジェネレーターの設定が必要です。
reset-actions-email=リセットアクションEメール
send-email=Eメールを送信
credentials.reset-actions-email.tooltip=リンクを記載したEメールをユーザーに送信します。リンクをクリックすることで、ユーザーはリセットアクションを実行できます。ユーザーはリセットの前にログインする必要はありません。例えば、 「Update Password」 アクションを設定してこのボタンをクリックすると、ユーザーはログインなしにパスワードの変更が可能になります。
add-user=ユーザーの追加
created-at=作成日
user-enabled=ユーザーの有効
user-enabled.tooltip=無効なユーザーはログインすることができません。
user-temporarily-locked=ユーザーの一時的なロック
user-temporarily-locked.tooltip=ユーザーは何度もログインに失敗してロックされている可能性があります。
unlock-user=ユーザーをアンロック
federation-link=フェデレーション リンク
email-verified=Eメールが確認済み
email-verified.tooltip=ユーザーのEメールが確認済みかどうかを設定します。
required-user-actions=必要なユーザーアクション
required-user-actions.tooltip=ユーザーがログインするときに必要なアクションです。「Verify email」は、Eメールアドレスを確認するためのEメールをユーザーに送信します。「Update profile」は、新しい個人情報を入力する必要があります。「Update password」は、ユーザーが新しいパスワードを入力する必要があります。「Configure OTP」は、モバイルパスワードジェネレーターの設定が必要です。
locale=ロケール
select-one.placeholder=1つ選択...
impersonate=代理ログイン
impersonate-user=ユーザーの代理
impersonate-user.tooltip=このユーザーとしてログインします。同じレルム内のユーザーの場合は、このユーザーでログインする前に、現在のログインセッションがログアウトされます。
identity-provider-alias=アイデンティティ プロバイダーのエイリアス
provider-user-id=プロバイダーのユーザー ID
provider-username=プロバイダーのユーザー名
no-identity-provider-links-available=使用可能なアイデンティティ プロバイダーのリンクはありません
group-membership=グループメンバーシップ
leave=外す
group-membership.tooltip=メンバーであるグループです。グループから外すには、リストのグループを選択して 「外す」 ボタンをクリックしてください。
membership.available-groups.tooltip=ユーザーが参加可能なグループです。グループを選択して 「参加」 ボタンをクリックしてください。
table-of-realm-users=レルムユーザーの一覧表
view-all-users=すべてのユーザーを参照
view-all-groups=すべてのグループを参照
unlock-users=ユーザーのアンロック
no-users-available=使用可能なユーザーはおりません
users.instruction=検索を入力するか、 「すべてのユーザーを参照」 をクリックしてください
consents=同意
started=開始
logout-all-sessions=すべてのセッションをログアウト
logout=ログアウト
new-name=新しい名前
ok=OK
attributes=属性
role-mappings=ロールマッピング
members=メンバー
details=詳細
identity-provider-links=アイデンティティ プロバイダーのリンク
register-required-action=Required アクションの登録
gender=性別
address=住所
phone=電話番号
profile-url=プロフィール URL
picture-url=画像 URL
website=Web サイト
import-keys-and-cert=鍵と証明書をインポート
import-keys-and-cert.tooltip=クライアントの鍵ペアと証明書をアップロードします。
upload-keys=鍵をアップロード
download-keys-and-cert=鍵と証明書をダウンロード
no-value-assigned.placeholder=アサイン済みの値はありません
remove=削除
no-group-members=グループメンバーはおりません
no-role-members=ロールメンバーはおりません
temporary=一時的
join=参加
event-type=イベントタイプ
events-config=イベント設定
event-listeners=イベントリスナー
login-events-settings=ログインイベントの設定
clear-events=イベントのクリア
saved-types=保存タイプ
clear-admin-events=管理イベントのクリア
clear-changes=変更をクリア
error=エラー
# Authz
# Authz Common
authz-authorization=認可
authz-owner=オーナー
authz-uri=URI
authz-uris=URI
authz-scopes=スコープ
authz-resource=リソース
authz-resource-type=リソースタイプ
authz-resources=リソース
authz-scope=スコープ
authz-authz-scopes=認可スコープ
authz-policies=ポリシー
authz-policy=ポリシー
authz-permissions=アクセス権
authz-users=ロールのユーザー
authz-evaluate=評価
authz-icon-uri=アイコン URI
authz-icon-uri.tooltip=アイコンを指す URI を設定します。
authz-select-scope=スコープを選択
authz-select-resource=リソースを選択
authz-associated-policies=関連ポリシー
authz-any-resource=任意のリソース
authz-any-scope=任意のスコープ
authz-any-role=任意のロール
authz-policy-evaluation=ポリシー評価
authz-select-client=クライアントを選択
authz-select-user=ユーザーを選択
authz-entitlements=エンタイトルメント
authz-no-resources=リソースはありません
authz-result=結果
authz-authorization-services-enabled=認可の有効
authz-authorization-services-enabled.tooltip=きめ細かい認可のサポートを有効/無効にします。
authz-required=必須
authz-show-details=詳細を表示する
authz-hide-details=詳細を非表示にする
authz-associated-permissions=関連付けられたアクセス権
authz-no-permission-associated=アクセス権が関連付けられていません
# Authz Settings
authz-import-config.tooltip=リソースサーバーの認可設定を含む JSON ファイルをインポートします。
authz-policy-enforcement-mode=ポリシー施行モード
authz-policy-enforcement-mode.tooltip=ポリシー施行モードは、認可リクエストを評価する際に適用される方法を決定します。 「Enforcing」 は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストはデフォルトで拒否されることを意味します。 「Permissive」 は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストは許可されることを意味します。 「Disabled」 は、完全にポリシーの評価を無効にし、任意のリソースへのアクセスを許可します。
authz-policy-enforcement-mode-enforcing=実施
authz-policy-enforcement-mode-permissive=許容
authz-policy-enforcement-mode-disabled=無効
authz-remote-resource-management=リモートリソース管理
authz-remote-resource-management.tooltip=リソースは、リソースサーバーによりリモートで管理すべきかどうかを設定します。 オフの場合は、リソースはこの管理コンソールだけで管理されます。
authz-export-settings=エクスポート設定
authz-export-settings.tooltip=このリソースサーバーのすべての認可設定をエクスポートしダウンロードします。
authz-server-decision-strategy.tooltip=判定戦略は、パーミッションの評価方法と最終的な判定の取得方法を決定します。「Affirmative」とは、リソースおよびそのスコープへのアクセスを許可するために、少なくとも1つのパーミッションが肯定的な判定に評価される必要があることを意味します。「Unanimous」とは、最終的な判定も肯定的であるために、すべてのパーミッションが肯定的な判定に評価される必要があることを意味します。
# Authz Resource List
authz-no-resources-available=使用可能なリソースはありません。
authz-no-scopes-assigned=アサイン済みのスコープはありません。
authz-no-type-defined=定義されたタイプはありません。
authz-no-uri-defined=URIが定義されていません。
authz-no-permission-assigned=アサイン済みのアクセス権はありません。
authz-no-policy-assigned=アサイン済みのポリシーはありません。
authz-create-permission=アクセス権を作成
# Authz Resource Detail
authz-add-resource=リソースの追加
authz-resource-name.tooltip=このリソースの一意な名前。この名前は、リソースを一意に識別するために使用でき、特定のリソースを照会するときに便利です。
authz-resource-owner.tooltip=このリソースのオーナーです。
authz-resource-type.tooltip=このリソースのタイプを設定します。異なるリソースインスタンスを同じタイプにグルーピングすることができます。
authz-resource-uri.tooltip=リソースによって保護されているURIのセット。
authz-resource-scopes.tooltip=このリソースに関連付けるスコープを設定します。
authz-resource-attributes=リソース属性
authz-resource-attributes.tooltip=リソースに関連付けられた属性。
authz-resource-user-managed-access-enabled=User-Managed Accessの有効
authz-resource-user-managed-access-enabled.tooltip=これを有効にすると、このリソースへのアクセスをリソースオーナーが管理できます。

# Authz Scope List
authz-add-scope=スコープの追加
authz-no-scopes-available=使用可能なスコープはありません。
# Authz Scope Detail
authz-scope-name.tooltip=このスコープのユニークな名前を設定します。名前はスコープの一意な識別に使用され、特定のスコープを照会する際に使用することができます。
# Authz Policy List
authz-all-types=すべてのタイプ
authz-create-policy=ポリシーを作成
authz-no-policies-available=使用可能なポリシーはありません。
# Authz Policy Detail
authz-policy-name.tooltip=このポリシーの名前を設定します。
authz-policy-description.tooltip=このポリシーの説明を設定します。
authz-policy-logic=ロジック
authz-policy-logic-positive=Positive
authz-policy-logic-negative=Negative
authz-policy-logic.tooltip=ロジックは、ポリシーの判定方法を決定します。 「Positive」 の場合は、このポリシーの評価中に得られた結果 (許可または拒否) が判定の実行に使用されます。 「Negative」 の場合は、結果は反転されます。言い換えれば、許可は拒否とその反対になります。
authz-policy-apply-policy=ポリシーの適用
authz-policy-apply-policy.tooltip=このポリシーやアクセス権で定義されたスコープに適用するすべてのポリシーを設定します。
authz-policy-decision-strategy=判定戦略
authz-policy-decision-strategy.tooltip=判定戦略は、ポリシーの評価方法と最終的な判定方法を決定します。 「Affirmative」 は、最終判定が positive となるためには、少なくとも1つのポリシーが positive と評価する必要がある、ということを意味します。 「Unanimous」 は、全体の判定が positive となるためには、すべてのポリシーが positive と評価する必要がある、ということを意味します。 「Consensus」 は、positive の数が negative の数より多くなければならないことを意味します。positive と negative の数が同じ場合は、最終的な判定は negative になります。
authz-policy-decision-strategy-affirmative=Affirmative
authz-policy-decision-strategy-unanimous=Unanimous
authz-policy-decision-strategy-consensus=Consensus
authz-select-a-policy=既存のポリシーを選択する
authz-no-policies-assigned=ポリシーが割り当てられていません。
# Authz Role Policy Detail
authz-add-role-policy=ロールポリシーの追加
authz-no-roles-assigned=アサイン済みのロールはありません。
authz-policy-role-realm-roles.tooltip=このポリシーで許可されるレルムロールを指定してください。
authz-policy-role-clients.tooltip=このポリシーに適用されるクライアントロールをフィルタリングするために、クライアントを選択してください。
authz-policy-role-client-roles.tooltip=このポリシーで許可されるクライアントロールを指定してください。
# Authz User Policy Detail
authz-add-user-policy=ユーザーポリシーの追加
authz-no-users-assigned=アサイン済みのユーザーはおりません。
authz-policy-user-users.tooltip=どのユーザーがこのポリシーで許可されるか指定してください。
# Authz Client Policy Detail
authz-add-client-policy=クライアントポリシーの追加
authz-no-clients-assigned=クライアントが割り当てられていません。
authz-policy-client-clients.tooltip=このポリシーで許可されるクライアントを指定します。
# Authz Time Policy Detail
authz-add-time-policy=タイムポリシーの追加
authz-policy-time-not-before.tooltip=ポリシーを許可しない日時を定義します。現在日時がこの値より後か、等しい場合にのみ許可されます。
authz-policy-time-not-on-after=この日時より後
authz-policy-time-not-on-after.tooltip=ポリシーを許可しない日時を定義します。現在日時がこの値より前か、等しい場合にのみ許可されます。
authz-policy-time-day-month=月の日
authz-policy-time-day-month.tooltip=ポリシーが許可される月の日を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の日が指定した2つの値の間にあるか、等しい場合のみ許可されます。
authz-policy-time-month=月
authz-policy-time-month.tooltip=ポリシーが許可される月を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の月が指定した2つの値の間にあるか、等しい場合のみ許可されます。
authz-policy-time-year=年
authz-policy-time-year.tooltip=ポリシーが許可される年を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の年が指定した2つの値の間にあるか、等しい場合のみ許可されます。
authz-policy-time-hour=時
authz-policy-time-hour.tooltip=ポリシーが許可される時を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の時が指定した2つの値の間にあるか、等しい場合のみ許可されます。
authz-policy-time-minute=分
authz-policy-time-minute.tooltip=ポリシーが許可される分を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の分が指定した2つの値の間にあるか、等しい場合のみ許可されます。
# Authz Aggregated Policy Detail
authz-aggregated=集約
authz-add-aggregated-policy=集約ポリシーの追加
# Authz Group Policy Detail
authz-add-group-policy=グループポリシーを追加する
authz-no-groups-assigned=グループが割り当てられていません。
authz-policy-group-claim=グループクレーム
authz-policy-group-claim.tooltip=定義されている場合、ポリシーは、パーミッションを要求するアイデンティティーを表すアクセストークンまたはIDトークン内の特定のクレームから、ユーザーのグループを取得します。定義されていない場合、ユーザーのグループはレルム設定から取得されます。
authz-policy-group-groups.tooltip=このポリシーで許可されるグループを指定します。

# Authz Permission List
authz-no-permissions-available=使用可能なアクセス権はありません。

# Authz Permission Detail
authz-permission-name.tooltip=このアクセス権の名前を設定します。
authz-permission-description.tooltip=このアクセス権の説明を設定します。

# Authz Resource Permission Detail
authz-add-resource-permission=リソースアクセス権の追加
authz-permission-resource-apply-to-resource-type=リソースタイプに適用
authz-permission-resource-apply-to-resource-type.tooltip=このアクセス権が、特定タイプの全リソースに適用されるかどうかを指定します。この場合、アクセス権は特定リソースタイプの全インスタンスに対して評価されます。
authz-permission-resource-resource.tooltip=このアクセス権が適用されるリソースインスタンスを指定します。
authz-permission-resource-type.tooltip=このアクセス権が適用されるリソースタイプを指定します。

# Authz Scope Permission Detail
authz-add-scope-permission=スコープアクセス権の追加
authz-permission-scope-resource.tooltip=選択されたリソースに関連するスコープに制限します。選択されていない場合は、すべてのスコープが使用可能になります。
authz-permission-scope-scope.tooltip=このアクセス権は1つまたは複数のスコープに適用されるように指定してください。

# Authz Evaluation
authz-evaluation-identity-information=アイデンティティ情報
authz-evaluation-identity-information.tooltip=ポリシーの評価の際に使用されるアイデンティティ情報の設定オプションです。
authz-evaluation-client.tooltip=認可リクエストを作成するクライアントを選択してください。提供されない場合は、認可リクエストは今いるページのクライアントで行われることになります。
authz-evaluation-user.tooltip=サーバーからパーミッションを検索するためにIDが使用されるユーザーを選択します。
authz-evaluation-role.tooltip=選択されたユーザーに関連付けたいロールを選択してください。
authz-evaluation-new=新規に評価
authz-evaluation-re-evaluate=再評価
authz-evaluation-previous=前の評価
authz-evaluation-contextual-info=コンテキスト情報
authz-evaluation-contextual-info.tooltip=ポリシーの評価の際に使用されるコンテキスト情報の設定オプションです。
authz-evaluation-contextual-attributes=コンテキスト属性
authz-evaluation-contextual-attributes.tooltip=実行環境や実行コンテキストによって提供される任意の属性を設定します。
authz-evaluation-permissions.tooltip=ポリシーが適用されるようにアクセス権を設定するオプションです。
authz-evaluation-evaluate=評価
authz-evaluation-any-resource-with-scopes=スコープを持つ任意のリソース
authz-evaluation-no-result=認可リクエストから結果を得ることができませんでした。提供されたリソースまたはスコープが、ポリシーと関連付けられているかどうかを確認してください。
authz-evaluation-no-policies-resource=このリソースのポリシーが見つかりませんでした。
authz-evaluation-result.tooltip=このアクセス権のリクエストの全体的な結果です。
authz-evaluation-scopes.tooltip=許可されたスコープリストです。
authz-evaluation-policies.tooltip=どのポリシーが評価され判定されたか詳細を表示しています。
authz-evaluation-authorization-data=レスポンス
authz-evaluation-authorization-data.tooltip=認可リクエストの処理の結果として送信された認可データのトークンを表示します。これは、許可を求めたクライアントに対して Keycloak が発行する基本的なものです。現在の認可リクエストで付与されたアクセス権については 「authorization」 クレームを確認してください。
authz-show-authorization-data=認可データを表示

keys=鍵
status=ステータス
keystore=キーストア
keystores=キーストア
add-keystore=キーストアの追加
add-keystore.placeholder=キーストアの追加...
view=ビュー
active=アクティブ
passive=受動的
disabled=無効
algorithm=アルゴリズム
providerHelpText=プロバイダーの説明

Sunday=日
Monday=月
Tuesday=火
Wednesday=水
Thursday=木
Friday=金
Saturday=土

user-storage-cache-policy=キャッシュ設定
userStorage.cachePolicy=キャッシュポリシー
userStorage.cachePolicy.option.DEFAULT=DEFAULT
userStorage.cachePolicy.option.EVICT_WEEKLY=EVICT_WEEKLY
userStorage.cachePolicy.option.EVICT_DAILY=EVICT_DAILY
userStorage.cachePolicy.option.MAX_LIFESPAN=MAX_LIFESPAN
userStorage.cachePolicy.option.NO_CACHE=NO_CACHE
userStorage.cachePolicy.tooltip=このストレージプロバイダーのキャッシュポリシー。「DEFAULT」は、グローバルキャッシュのデフォルト設定です。「EVICT_DAILY」は、キャッシュが無効になる毎日の時刻です。「EVICT_WEEKLY」は曜日であり、キャッシュが無効になる時刻です。「MAX-LIFESPAN」は、キャッシュエントリーの存続期間となるミリ秒単位の時間です。
userStorage.cachePolicy.evictionDay=エビクションの日
userStorage.cachePolicy.evictionDay.tooltip=エントリが無効になる日の曜日を設定します。
userStorage.cachePolicy.evictionHour=エビクションの時
userStorage.cachePolicy.evictionHour.tooltip=エントリが無効になる日の時を設定します。
userStorage.cachePolicy.evictionMinute=エビクションの分
userStorage.cachePolicy.evictionMinute.tooltip=エントリが無効になる日の分を設定します。
userStorage.cachePolicy.maxLifespan=最大生存期間
userStorage.cachePolicy.maxLifespan.tooltip=キャッシュエントリーの最大生存期間（ミリ秒）。
user-origin-link=ストレージオリジン
user-origin.tooltip=ユーザーが読み込まれたユーザーストレージプロバイダー
user-link.tooltip=このローカルに格納されたユーザーがインポートされていたユーザーストレージプロバイダー。
client-origin-link=ストレージオリジン
client-origin.tooltip=クライアントがロードされたプロバイダー

client-storage-cache-policy=キャッシュ設定
clientStorage.cachePolicy=キャッシュポリシー
clientStorage.cachePolicy.option.DEFAULT=DEFAULT
clientStorage.cachePolicy.option.EVICT_WEEKLY=EVICT_WEEKLY
clientStorage.cachePolicy.option.EVICT_DAILY=EVICT_DAILY
clientStorage.cachePolicy.option.MAX_LIFESPAN=MAX_LIFESPAN
clientStorage.cachePolicy.option.NO_CACHE=NO_CACHE
clientStorage.cachePolicy.tooltip=このストレージプロバイダーのキャッシュポリシー。「DEFAULT」は、グローバルキャッシュのデフォルト設定です。「EVICT_DAILY」は、キャッシュが無効になる毎日の時刻です。「EVICT_WEEKLY」は曜日であり、キャッシュが無効になる時刻です。「MAX-LIFESPAN」は、キャッシュエントリーの存続期間となるミリ秒単位の時間です。
clientStorage.cachePolicy.evictionDay=エビクションの日
clientStorage.cachePolicy.evictionDay.tooltip=エントリが無効になる日の曜日を設定します。
clientStorage.cachePolicy.evictionHour=エビクションの時
clientStorage.cachePolicy.evictionHour.tooltip=エントリが無効になる日の時を設定します。
clientStorage.cachePolicy.evictionMinute=エビクションの分
clientStorage.cachePolicy.evictionMinute.tooltip=エントリが無効になる日の分を設定します。
clientStorage.cachePolicy.maxLifespan=最大生存期間
clientStorage.cachePolicy.maxLifespan.tooltip=キャッシュエントリーの最大生存期間（ミリ秒）。

client-storage-list-no-entries=Keycloakは外部クライアントデータベースを連携できます。即時利用可能なOpenShift OAuthのクライアントとサービスアカウントをサポートしています。開始するには、以下のプルダウンからプロバイダーを選択します。

disable=無効
disableable-credential-types=無効化可能なタイプ
credentials.disableable.tooltip=無効にできるクレデンシャルタイプのリストを設定します。
disable-credential-types=クレデンシャルタイプを無効化
credentials.disable.tooltip=選択したクレデンシャルタイプを無効にするには、ボタンをクリックします。
credential-types=クレデンシャルタイプ
manage-user-password=パスワードの管理
disable-credentials=クレデンシャルの無効化
credential-reset-actions=クレデンシャルのリセット
credential-reset-actions-timeout=有効期限
credential-reset-actions-timeout.tooltip=アクション許可が失効するまでの最大時間。
ldap-mappers=LDAP マッパー
create-ldap-mapper=LDAP マッパーの作成
map-role-mgmt-scope-description=管理者がこのロールをユーザーまたはグループにマッピングできるかどうかを決定するポリシー
manage-authz-users-scope-description=管理者がレルム内のすべてのユーザーを管理できるかどうかを決定するポリシー
view-authz-users-scope-description=管理者がレルム内のすべてのユーザーを表示できるかどうかを決定するポリシー
permissions-enabled-role=アクセス権が有効になっています
permissions-enabled-role.tooltip=このロールを管理するためのきめ細かなアクセス権を有効にするかどうか。無効にすると、現在設定されているすべてのアクセス権が削除されます。
manage-permissions-role.tooltip=ロールを管理するためのきめ細かなアクセス権。たとえば、ロールの割り当てを許可されているユーザーに対して、さまざまなポリシーを定義できます。
lookup=ルックアップ
manage-permissions-users.tooltip=レルム内のすべてのユーザーを管理するきめ細かいアクセス権。レルム内のユーザーを管理できるユーザーには、さまざまなポリシーを定義できます。
permissions-enabled-users=アクセス権が有効
permissions-enabled-users.tooltip=ユーザーを管理するためのきめ細かいアクセス権を有効にするかどうか。無効にすると、現在設定されているすべてのアクセス権が削除されます。
manage-permissions-client.tooltip=このクライアントを管理したり、このクライアントによって定義されたロールを適用したりする管理者のきめ細かいアクセス権です。
manage-permissions-group.tooltip=このグループまたはこのグループのメンバーを管理したい管理者のきめ細かいアクセス権。
manage-authz-group-scope-description=管理者がこのグループを管理できるかどうかを決定するポリシー
view-authz-group-scope-description=管理者がこのグループを表示できるかどうかを決定するポリシー
view-members-authz-group-scope-description=管理者がこのグループのメンバーを管理できるかどうかを決定するポリシー
token-exchange-authz-client-scope-description=このクライアントを対象とするトークンのトークン交換を許可するクライアントを決定するポリシー。
token-exchange-authz-idp-scope-description=このアイデンティティプロバイダーが発行した外部トークンに対して、どのクライアントがトークンを交換できるかを決定するポリシー。
manage-authz-client-scope-description=管理者がこのクライアントを管理できるかどうかを決定するポリシー
configure-authz-client-scope-description=管理者の管理権限を削減しました。スコープ、テンプレート、またはプロトコルマッパーを設定できません。
view-authz-client-scope-description=管理者がこのクライアントを表示できるかどうかを決定するポリシー
map-roles-authz-client-scope-description=管理者がこのクライアントによって定義されたロールをマップできるかどうかを決定するポリシー
map-roles-client-scope-authz-client-scope-description=管理者がこのクライアントによって定義されたロールを別のクライアントのクライアントスコープに適用できるかどうかを決定するポリシー
map-roles-composite-authz-client-scope-description=管理者がこのクライアントによって定義されたロールをコンポジットとして別のロールに適用できるかどうかを決定するポリシー
map-role-authz-role-scope-description=管理者がこのロールをユーザーまたはグループにマップできるかどうかを決定するポリシー
map-role-client-scope-authz-role-scope-description=管理者がこのロールをクライアントのクライアントスコープに適用できるかどうかを決定するポリシー
map-role-composite-authz-role-scope-description=管理者がこのロールをコンポジットとして別のロールに適用できるかどうかを決定するポリシー
manage-group-membership-authz-users-scope-description=管理者がレルム内のすべてのユーザーのグループメンバーシップを管理できるかどうかを決定するポリシー。これは、特定のグループポリシーと組み合わせて使用​​されます
impersonate-authz-users-scope-description=管理者が他のユーザーを偽装できるかどうかを決定するポリシー
map-roles-authz-users-scope-description=管理者がすべてのユーザーのロールをマップできるかどうかを決定するポリシー
user-impersonated-authz-users-scope-description=どのユーザーを偽装するかを決定するポリシー。これらのポリシーは、偽装されているユーザーに適用されます。
manage-membership-authz-group-scope-description=管理者がこのグループにユーザーを追加または削除できるかどうかを決定するポリシー
manage-members-authz-group-scope-description=管理者がこのグループのメンバーを管理できるかどうかを決定するポリシー

# KEYCLOAK-6771 Certificate Bound Token
# https://tools.ietf.org/html/draft-ietf-oauth-mtls-08#section-3
advanced-client-settings=詳細設定
advanced-client-settings.tooltip=このセクションを展開して、このクライアントの詳細設定を設定します
tls-client-certificate-bound-access-tokens=OAuth 2.0相互TLS証明書バインドアクセストークンが有効
tls-client-certificate-bound-access-tokens.tooltip=これにより、OAuth 2.0相互TLS証明書バインドアクセストークンがサポートされます。つまり、Keycloakは、Keycloakのトークンエンドポイントとこのクライアントの間で相互TLSにより交換されるクライアントのX.509証明書と、アクセストークンおよびリフレッシュトークンをバインドします。これらのトークンは、ベアラトークンの代わりにHolder-of-Keyトークンとして扱うことができます。
subjectdn=サブジェクトDN
subjectdn-tooltip=クライアント証明書内のサブジェクトDNを検証するための正規表現。あらゆる種類の式に一致させるには、"(.*?)(?:$)"を使用します。
pkce-code-challenge-method=Proof Key for Code Exchangeのコードチャレンジ方式
pkce-code-challenge-method.tooltip=PKCEのどのコードチャレンジ方式を使用するかを選択します。指定しない場合、keycloakは、クライアントが適切なコードチャレンジとコード交換の方式で認可リクエストを送信しない限り、クライアントにPKCEを適用しません。