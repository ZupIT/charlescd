{
	"info": {
		"_postman_id": "c6d30d59-b11d-4543-92b6-ae612e829eb5",
		"name": "Charles Butler",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "V2",
			"item": [
				{
					"name": "Deployment",
					"item": [
						{
							"name": "Create Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = JSON.parse(responseBody);",
											"",
											"postman.setGlobalVariable(\"deploymentId\", response[\"id\"]);",
											"",
											"pm.test(\"Status created\", function() {",
											"    pm.response.to.have.status(201)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"",
											"pm.collectionVariables.set('deploymentId', uuid.v4());",
											"pm.collectionVariables.set('workspaceId', uuid.v4());",
											"pm.collectionVariables.set('moduleId', uuid.v4());",
											"pm.collectionVariables.set('circleId', uuid.v4());",
											"pm.collectionVariables.set('componentId', uuid.v4());",
											"pm.collectionVariables.set('authorId', uuid.v4());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-workspace-id",
										"value": "{{workspaceId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeoutInSeconds\": 200,\n  \"deploymentId\": \"{{deploymentId}}\",\n  \"namespace\": \"some-namespace\",\n  \"git\": {\n    \"token\": \"git-token\",\n    \"provider\": \"GITHUB\"\n  },\n  \"components\": [\n    {\n      \"componentName\": \"some-component\",\n      \"helmRepository\": \"https://api.github.com/repos/some-helm-url-repository/contents\",\n      \"buildImageUrl\": \"build-image-url\",\n      \"buildImageTag\": \"build-image-tag\",\n      \"componentId\": \"componentId\"\n    }\n  ],\n  \"circle\": {\n    \"id\": \"{{circleId}}\",\n    \"default\": false\n  },\n  \"authorId\": \"{{authorId}}\",\n  \"callbackUrl\": \"http://localhost:xxxx/\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/v2/deployments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"v2",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Undeployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = JSON.parse(responseBody);",
											"",
											"postman.setGlobalVariable(\"deploymentId\", response[\"id\"]);",
											"",
											"pm.test(\"Status created\", function() {",
											"    pm.response.to.have.status(201)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-workspace-id",
										"value": "{{workspaceId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"authorId\": \"{{authorId}}\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/v2/deployments/{{deploymentId}}/undeploy",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"v2",
										"deployments",
										"{{deploymentId}}",
										"undeploy"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = JSON.parse(responseBody);",
											"",
											"postman.setGlobalVariable(\"deploymentId\", response[\"id\"]);",
											"",
											"pm.test(\"Status created\", function() {",
											"    pm.response.to.have.status(201)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-workspace-id",
										"value": "{{workspaceId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/v2/deployments/{{deploymentId}}/logs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"v2",
										"deployments",
										"{{deploymentId}}",
										"logs"
									]
								}
							},
							"response": []
						},
						{
							"name": "List executions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status success\", function() {",
											"    pm.response.to.have.status(200)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/v2/executions?page=1&size=20",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"v2",
										"executions"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "deploymentId",
			"value": "deploymentId"
		},
		{
			"key": "workspaceId",
			"value": "workspaceId"
		},
		{
			"key": "moduleId",
			"value": "moduleId"
		},
		{
			"key": "circleId",
			"value": "circleId"
		},
		{
			"key": "componentId",
			"value": "componentId"
		},
		{
			"key": "authorId",
			"value": "authorId"
		}
	]
}